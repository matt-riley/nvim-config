
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg//nvim)
chdir(/home/matt/.config/nvim)
sourcing "/etc/xdg//nvim/sysinit.vim"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim)
chdir(/home/matt/.config/nvim)
line 2: sourcing "/usr/share/nvim/archlinux.vim"
finished sourcing /usr/share/nvim/archlinux.vim
continuing in /etc/xdg/nvim/sysinit.vim
finished sourcing /etc/xdg//nvim/sysinit.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.config/nvim/init.lua"
not found in 'runtimepath': "lua/settings.lua"
not found in 'packpath': "pack/*/start/*/lua/settings.lua"
not found in 'packpath': "start/*/lua/settings.lua"
not found in 'runtimepath': "lua/keymaps.lua"
not found in 'packpath': "pack/*/start/*/lua/keymaps.lua"
not found in 'packpath': "start/*/lua/keymaps.lua"
not found in 'runtimepath': "lua/which-key.lua"
not found in 'packpath': "pack/*/start/*/lua/which-key.lua"
not found in 'packpath': "start/*/lua/which-key.lua"
not found in 'runtimepath': "lua/which-key/init.lua"
not found in 'runtimepath': "lua/which-key/keys.lua"
not found in 'runtimepath': "lua/which-key/tree.lua"
not found in 'runtimepath': "lua/which-key/util.lua"
not found in 'runtimepath': "lua/which-key/config.lua"
not found in 'runtimepath': "lua/plugins/telescope.lua"
not found in 'packpath': "pack/*/start/*/lua/plugins/telescope.lua"
not found in 'packpath': "start/*/lua/plugins/telescope.lua"
not found in 'runtimepath': "lua/notify.lua"
not found in 'packpath': "pack/*/start/*/lua/notify.lua"
not found in 'packpath': "start/*/lua/notify.lua"
not found in 'runtimepath': "lua/notify/init.lua"
not found in 'runtimepath': "lua/notify/util.lua"
not found in 'packpath': "pack/*/start/*/lua/notify/util.lua"
not found in 'packpath': "start/*/lua/notify/util.lua"
not found in 'runtimepath': "lua/notify/util/init.lua"
not found in 'runtimepath': "lua/notify/util/queue.lua"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime)
chdir(/home/matt/.config/nvim)
line 0: sourcing "/usr/share/nvim/runtime/filetype.vim"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/usr/share/vim/vimfiles/ftdetect/PKGBUILD.vim"
finished sourcing /usr/share/vim/vimfiles/ftdetect/PKGBUILD.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/usr/share/vim/vimfiles/ftdetect/conkyrc.vim"
finished sourcing /usr/share/vim/vimfiles/ftdetect/conkyrc.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/usr/share/vim/vimfiles/ftdetect/logfile.vim"
finished sourcing /usr/share/vim/vimfiles/ftdetect/logfile.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/usr/share/vim/vimfiles/ftdetect/mail.vim"
finished sourcing /usr/share/vim/vimfiles/ftdetect/mail.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/usr/share/vim/vimfiles/ftdetect/neomuttrc.vim"
finished sourcing /usr/share/vim/vimfiles/ftdetect/neomuttrc.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/usr/share/vim/vimfiles/ftdetect/task.vim"
finished sourcing /usr/share/vim/vimfiles/ftdetect/task.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gdscript.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gdscript.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gomod.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gomod.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/query.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/query.vim
continuing in /usr/share/nvim/runtime/filetype.vim
not found in 'packpath': "start/*/ftdetect/*.vim"
not found in 'runtimepath': "ftdetect/*.lua"
not found in 'packpath': "pack/*/start/*/ftdetect/*.lua"
not found in 'packpath': "start/*/ftdetect/*.lua"
finished sourcing /usr/share/nvim/runtime/filetype.vim
continuing in nvim_exec() called at /home/matt/.config/nvim/init.lua:0
not found in 'packpath': "pack/*/start/*/filetype.vim"
not found in 'packpath': "start/*/filetype.vim"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime)
chdir(/home/matt/.config/nvim)
line 0: sourcing "/usr/share/nvim/runtime/ftplugin.vim"
finished sourcing /usr/share/nvim/runtime/ftplugin.vim
continuing in nvim_exec() called at /home/matt/.config/nvim/init.lua:0
not found in 'packpath': "pack/*/start/*/ftplugin.vim"
not found in 'packpath': "start/*/ftplugin.vim"
not found in 'runtimepath': "lua/plugins.lua"
not found in 'packpath': "pack/*/start/*/lua/plugins.lua"
not found in 'packpath': "start/*/lua/plugins.lua"
not found in 'runtimepath': "lua/packer.lua"
not found in 'runtimepath': "lua/packer/util.lua"
not found in 'runtimepath': "lua/packer/plugin_utils.lua"
not found in 'runtimepath': "lua/packer/async.lua"
not found in 'runtimepath': "lua/packer/log.lua"
not found in 'runtimepath': "lua/packer/jobs.lua"
not found in 'runtimepath': "lua/packer/result.lua"
not found in 'runtimepath': "lua/plugins/utils.lua"
not found in 'packpath': "pack/*/start/*/lua/plugins/utils.lua"
not found in 'packpath': "start/*/lua/plugins/utils.lua"
not found in 'runtimepath': "lua/plugins/lsp.lua"
not found in 'packpath': "pack/*/start/*/lua/plugins/lsp.lua"
not found in 'packpath': "start/*/lua/plugins/lsp.lua"
not found in 'runtimepath': "lua/lspconfig.lua"
not found in 'runtimepath': "lua/lspconfig/configs.lua"
not found in 'runtimepath': "lua/lspconfig/util.lua"
not found in 'runtimepath': "lua/lua-dev.lua"
not found in 'packpath': "pack/*/start/*/lua/lua-dev.lua"
not found in 'packpath': "start/*/lua/lua-dev.lua"
not found in 'runtimepath': "lua/lua-dev/init.lua"
not found in 'runtimepath': "lua/lua-dev/config.lua"
not found in 'runtimepath': "lua/workspace.lua"
not found in 'packpath': "pack/*/start/*/lua/workspace.lua"
not found in 'packpath': "start/*/lua/workspace.lua"
not found in 'runtimepath': "lua/workspace/init.lua"
not found in 'packpath': "pack/*/start/*/lua/workspace/init.lua"
not found in 'packpath': "start/*/lua/workspace/init.lua"
not found in 'runtimepath': "lua/workspace.so"
not found in 'packpath': "pack/*/start/*/lua/workspace.so"
not found in 'packpath': "start/*/lua/workspace.so"
not found in 'runtimepath': "lua/lua-dev/sumneko.lua"
not found in 'runtimepath': "lua/lspsaga.lua"
not found in 'packpath': "pack/*/start/*/lua/lspsaga.lua"
not found in 'packpath': "start/*/lua/lspsaga.lua"
not found in 'runtimepath': "lua/lspsaga/init.lua"
not found in 'runtimepath': "lua/lspsaga/diagnostic.lua"
not found in 'runtimepath': "lua/lspsaga/window.lua"
not found in 'runtimepath': "lua/lspsaga/wrap.lua"
not found in 'runtimepath': "lua/lspsaga/libs.lua"
not found in 'runtimepath': "lua/lspsaga/hover.lua"
not found in 'runtimepath': "lua/lspsaga/action.lua"
not found in 'runtimepath': "lua/lspinstall.lua"
not found in 'runtimepath': "lua/lspinstall/servers.lua"
not found in 'runtimepath': "lua/lspinstall/servers/angular.lua"
not found in 'runtimepath': "lua/lspinstall/util.lua"
not found in 'runtimepath': "lua/lspinstall/servers/bash.lua"
not found in 'runtimepath': "lua/lspinstall/servers/clojure.lua"
not found in 'runtimepath': "lua/lspinstall/servers/cmake.lua"
not found in 'runtimepath': "lua/lspinstall/servers/cpp.lua"
not found in 'runtimepath': "lua/lspinstall/servers/csharp.lua"
not found in 'runtimepath': "lua/lspinstall/servers/css.lua"
not found in 'runtimepath': "lua/lspinstall/servers/deno.lua"
not found in 'runtimepath': "lua/lspinstall/servers/diagnosticls.lua"
not found in 'runtimepath': "lua/lspinstall/servers/dockerfile.lua"
not found in 'runtimepath': "lua/lspinstall/servers/efm.lua"
not found in 'runtimepath': "lua/lspinstall/servers/elixir.lua"
not found in 'runtimepath': "lua/lspinstall/servers/elm.lua"
not found in 'runtimepath': "lua/lspinstall/servers/ember.lua"
not found in 'runtimepath': "lua/lspinstall/servers/fortran.lua"
not found in 'runtimepath': "lua/lspinstall/servers/go.lua"
not found in 'runtimepath': "lua/lspinstall/servers/graphql.lua"
not found in 'runtimepath': "lua/lspinstall/servers/haskell.lua"
not found in 'runtimepath': "lua/lspinstall/servers/html.lua"
not found in 'runtimepath': "lua/lspinstall/servers/java.lua"
not found in 'runtimepath': "lua/lspinstall/servers/json.lua"
not found in 'runtimepath': "lua/lspinstall/servers/kotlin.lua"
not found in 'runtimepath': "lua/lspinstall/servers/latex.lua"
not found in 'runtimepath': "lua/lspinstall/servers/lua.lua"
not found in 'runtimepath': "lua/lspinstall/servers/php.lua"
not found in 'runtimepath': "lua/lspinstall/servers/puppet.lua"
not found in 'runtimepath': "lua/lspinstall/servers/purescript.lua"
not found in 'runtimepath': "lua/lspinstall/servers/python.lua"
not found in 'runtimepath': "lua/lspinstall/servers/rome.lua"
not found in 'runtimepath': "lua/lspinstall/servers/ruby.lua"
not found in 'runtimepath': "lua/lspinstall/servers/rust.lua"
not found in 'runtimepath': "lua/lspinstall/servers/svelte.lua"
not found in 'runtimepath': "lua/lspinstall/servers/tailwindcss.lua"
not found in 'runtimepath': "lua/lspinstall/servers/terraform.lua"
not found in 'runtimepath': "lua/lspinstall/servers/typescript.lua"
not found in 'runtimepath': "lua/lspinstall/servers/vim.lua"
not found in 'runtimepath': "lua/lspinstall/servers/vue.lua"
not found in 'runtimepath': "lua/lspinstall/servers/yaml.lua"
not found in 'runtimepath': "lua/null-ls.lua"
not found in 'packpath': "pack/*/start/*/lua/null-ls.lua"
not found in 'packpath': "start/*/lua/null-ls.lua"
not found in 'runtimepath': "lua/null-ls/init.lua"
not found in 'runtimepath': "lua/null-ls/helpers.lua"
not found in 'runtimepath': "lua/null-ls/utils.lua"
not found in 'runtimepath': "lua/null-ls/config.lua"
not found in 'runtimepath': "lua/null-ls/methods.lua"
not found in 'runtimepath': "lua/null-ls/state.lua"
not found in 'runtimepath': "lua/null-ls/builtins.lua"
not found in 'packpath': "pack/*/start/*/lua/null-ls/builtins.lua"
not found in 'packpath': "start/*/lua/null-ls/builtins.lua"
not found in 'runtimepath': "lua/null-ls/builtins/init.lua"
not found in 'runtimepath': "lua/null-ls/info.lua"
not found in 'runtimepath': "lua/null-ls/builtins/diagnostics.lua"
not found in 'runtimepath': "lua/null-ls/builtins/formatting.lua"
not found in 'runtimepath': "lua/null-ls/lspconfig.lua"
not found in 'runtimepath': "lua/null-ls/rpc.lua"
not found in 'runtimepath': "lua/null-ls/handlers.lua"
not found in 'runtimepath': "lua/luasnip.lua"
not found in 'packpath': "pack/*/start/*/lua/luasnip.lua"
not found in 'packpath': "start/*/lua/luasnip.lua"
not found in 'runtimepath': "lua/luasnip/init.lua"
not found in 'runtimepath': "lua/luasnip/nodes/snippet.lua"
not found in 'runtimepath': "lua/luasnip/nodes/node.lua"
not found in 'runtimepath': "lua/luasnip/session.lua"
not found in 'runtimepath': "lua/luasnip/util/util.lua"
not found in 'runtimepath': "lua/luasnip/util/events.lua"
not found in 'runtimepath': "lua/luasnip/util/types.lua"
not found in 'runtimepath': "lua/luasnip/nodes/insertNode.lua"
not found in 'runtimepath': "lua/luasnip/config.lua"
not found in 'runtimepath': "lua/luasnip/nodes/textNode.lua"
not found in 'runtimepath': "lua/luasnip/util/mark.lua"
not found in 'runtimepath': "lua/luasnip/util/environ.lua"
not found in 'runtimepath': "lua/luasnip/util/pattern_tokenizer.lua"
not found in 'runtimepath': "lua/luasnip/nodes/functionNode.lua"
not found in 'runtimepath': "lua/luasnip/nodes/choiceNode.lua"
not found in 'runtimepath': "lua/luasnip/nodes/dynamicNode.lua"
not found in 'runtimepath': "lua/luasnip/util/parser.lua"
not found in 'runtimepath': "lua/luasnip/util/functions.lua"
not found in 'runtimepath': "lua/cmp.lua"
not found in 'packpath': "pack/*/start/*/lua/cmp.lua"
not found in 'packpath': "start/*/lua/cmp.lua"
not found in 'runtimepath': "lua/cmp/init.lua"
not found in 'runtimepath': "lua/cmp/core.lua"
not found in 'runtimepath': "lua/cmp/utils/debug.lua"
not found in 'runtimepath': "lua/cmp/utils/char.lua"
not found in 'runtimepath': "lua/cmp/utils/str.lua"
not found in 'runtimepath': "lua/cmp/utils/pattern.lua"
not found in 'runtimepath': "lua/cmp/utils/async.lua"
not found in 'runtimepath': "lua/cmp/utils/keymap.lua"
not found in 'runtimepath': "lua/cmp/utils/misc.lua"
not found in 'runtimepath': "lua/cmp/utils/cache.lua"
not found in 'runtimepath': "lua/cmp/context.lua"
not found in 'runtimepath': "lua/cmp/types.lua"
not found in 'packpath': "pack/*/start/*/lua/cmp/types.lua"
not found in 'packpath': "start/*/lua/cmp/types.lua"
not found in 'runtimepath': "lua/cmp/types/init.lua"
not found in 'runtimepath': "lua/cmp/types/cmp.lua"
not found in 'runtimepath': "lua/cmp/types/lsp.lua"
not found in 'runtimepath': "lua/cmp/types/vim.lua"
not found in 'runtimepath': "lua/cmp/source.lua"
not found in 'runtimepath': "lua/cmp/config.lua"
not found in 'runtimepath': "lua/cmp/config/default.lua"
not found in 'runtimepath': "lua/cmp/config/compare.lua"
not found in 'runtimepath': "lua/cmp/matcher.lua"
not found in 'runtimepath': "lua/cmp/entry.lua"
not found in 'runtimepath': "lua/cmp/menu.lua"
not found in 'runtimepath': "lua/cmp/float.lua"
not found in 'runtimepath': "lua/cmp/utils/autocmd.lua"
not found in 'runtimepath': "lua/cmp/config/mapping.lua"
not found in 'runtimepath': "lua/lspkind.lua"
not found in 'packpath': "pack/*/start/*/lua/lspkind.lua"
not found in 'packpath': "start/*/lua/lspkind.lua"
not found in 'runtimepath': "lua/lspkind/init.lua"
not found in 'runtimepath': "lua/cmp_nvim_lsp.lua"
not found in 'packpath': "pack/*/start/*/lua/cmp_nvim_lsp.lua"
not found in 'packpath': "start/*/lua/cmp_nvim_lsp.lua"
not found in 'runtimepath': "lua/cmp_nvim_lsp/init.lua"
not found in 'runtimepath': "lua/cmp_nvim_lsp/source.lua"
not found in 'runtimepath': "lua/trouble.lua"
not found in 'packpath': "pack/*/start/*/lua/trouble.lua"
not found in 'packpath': "start/*/lua/trouble.lua"
not found in 'runtimepath': "lua/trouble/init.lua"
not found in 'runtimepath': "lua/trouble/view.lua"
not found in 'runtimepath': "lua/trouble/renderer.lua"
not found in 'runtimepath': "lua/trouble/providers.lua"
not found in 'packpath': "pack/*/start/*/lua/trouble/providers.lua"
not found in 'packpath': "start/*/lua/trouble/providers.lua"
not found in 'runtimepath': "lua/trouble/providers/init.lua"
not found in 'runtimepath': "lua/trouble/util.lua"
not found in 'runtimepath': "lua/trouble/config.lua"
not found in 'runtimepath': "lua/trouble/providers/qf.lua"
not found in 'runtimepath': "lua/trouble/providers/telescope.lua"
not found in 'runtimepath': "lua/trouble/providers/lsp.lua"
not found in 'runtimepath': "lua/trouble/text.lua"
not found in 'runtimepath': "lua/trouble/folds.lua"
not found in 'runtimepath': "lua/trouble/colors.lua"
not found in 'runtimepath': "lua/telescope.lua"
not found in 'packpath': "pack/*/start/*/lua/telescope.lua"
not found in 'packpath': "start/*/lua/telescope.lua"
not found in 'runtimepath': "lua/telescope/init.lua"
not found in 'runtimepath': "lua/telescope/_extensions.lua"
not found in 'packpath': "pack/*/start/*/lua/telescope/_extensions.lua"
not found in 'packpath': "start/*/lua/telescope/_extensions.lua"
not found in 'runtimepath': "lua/telescope/_extensions/init.lua"
not found in 'runtimepath': "lua/telescope/sorters.lua"
not found in 'runtimepath': "lua/telescope/log.lua"
not found in 'runtimepath': "lua/plenary/log.lua"
not found in 'runtimepath': "lua/telescope/utils.lua"
not found in 'runtimepath': "lua/plenary/path.lua"
not found in 'runtimepath': "lua/plenary/bit.lua"
not found in 'runtimepath': "lua/plenary/functional.lua"
not found in 'runtimepath': "lua/ffi.lua"
not found in 'packpath': "pack/*/start/*/lua/ffi.lua"
not found in 'packpath': "start/*/lua/ffi.lua"
not found in 'runtimepath': "lua/ffi/init.lua"
not found in 'packpath': "pack/*/start/*/lua/ffi/init.lua"
not found in 'packpath': "start/*/lua/ffi/init.lua"
not found in 'runtimepath': "lua/ffi.so"
not found in 'packpath': "pack/*/start/*/lua/ffi.so"
not found in 'packpath': "start/*/lua/ffi.so"
not found in 'runtimepath': "lua/plenary/job.lua"
not found in 'runtimepath': "lua/telescope/previewers.lua"
not found in 'packpath': "pack/*/start/*/lua/telescope/previewers.lua"
not found in 'packpath': "start/*/lua/telescope/previewers.lua"
not found in 'runtimepath': "lua/telescope/previewers/init.lua"
not found in 'runtimepath': "lua/telescope/previewers/previewer.lua"
not found in 'runtimepath': "lua/telescope/previewers/term_previewer.lua"
not found in 'runtimepath': "lua/telescope/config.lua"
not found in 'runtimepath': "lua/plenary/strings.lua"
not found in 'runtimepath': "lua/telescope/deprecated.lua"
not found in 'runtimepath': "lua/telescope/previewers/utils.lua"
not found in 'runtimepath': "lua/plenary/context_manager.lua"
not found in 'runtimepath': "lua/nvim-treesitter.lua"
not found in 'runtimepath': "lua/nvim-treesitter/install.lua"
not found in 'runtimepath': "lua/nvim-treesitter/utils.lua"
not found in 'runtimepath': "lua/nvim-treesitter/parsers.lua"
not found in 'runtimepath': "lua/nvim-treesitter/info.lua"
not found in 'runtimepath': "lua/nvim-treesitter/configs.lua"
not found in 'runtimepath': "lua/nvim-treesitter/query.lua"
not found in 'runtimepath': "lua/nvim-treesitter/tsrange.lua"
not found in 'runtimepath': "lua/nvim-treesitter/ts_utils.lua"
not found in 'runtimepath': "lua/nvim-treesitter/caching.lua"
not found in 'runtimepath': "lua/nvim-treesitter/shell_command_selectors.lua"
not found in 'runtimepath': "lua/nvim-treesitter/query_predicates.lua"
not found in 'runtimepath': "lua/telescope/from_entry.lua"
not found in 'runtimepath': "lua/telescope/previewers/buffer_previewer.lua"
not found in 'runtimepath': "lua/plenary/filetype.lua"
not found in 'runtimepath': "data/plenary/filetypes/base.lua"
not found in 'packpath': "start/*/data/plenary/filetypes/base.lua"
not found in 'runtimepath': "data/plenary/filetypes/builtin.lua"
not found in 'packpath': "start/*/data/plenary/filetypes/builtin.lua"
not found in 'runtimepath': "lua/plenary/scandir.lua"
not found in 'runtimepath': "lua/telescope/actions.lua"
not found in 'packpath': "pack/*/start/*/lua/telescope/actions.lua"
not found in 'packpath': "start/*/lua/telescope/actions.lua"
not found in 'runtimepath': "lua/telescope/actions/init.lua"
not found in 'runtimepath': "lua/telescope/state.lua"
not found in 'runtimepath': "lua/plenary/popup.lua"
not found in 'packpath': "pack/*/start/*/lua/plenary/popup.lua"
not found in 'packpath': "start/*/lua/plenary/popup.lua"
not found in 'runtimepath': "lua/plenary/popup/init.lua"
not found in 'runtimepath': "lua/plenary/window/border.lua"
not found in 'runtimepath': "lua/plenary/tbl.lua"
not found in 'runtimepath': "lua/plenary/window.lua"
not found in 'packpath': "pack/*/start/*/lua/plenary/window.lua"
not found in 'packpath': "start/*/lua/plenary/window.lua"
not found in 'runtimepath': "lua/plenary/window/init.lua"
not found in 'runtimepath': "lua/plenary/popup/utils.lua"
not found in 'runtimepath': "lua/telescope/pickers/scroller.lua"
not found in 'runtimepath': "lua/telescope/actions/state.lua"
not found in 'runtimepath': "lua/telescope/actions/utils.lua"
not found in 'runtimepath': "lua/telescope/actions/set.lua"
not found in 'runtimepath': "lua/telescope/actions/mt.lua"
not found in 'runtimepath': "lua/telescope/pickers/entry_display.lua"
not found in 'runtimepath': "lua/telescope/config/resolve.lua"
not found in 'runtimepath': "lua/telescope/_extensions/fzf.lua"
not found in 'runtimepath': "lua/fzf_lib.lua"
not found in 'runtimepath': "lua/telescope/_extensions/projects.lua"
not found in 'runtimepath': "lua/telescope/finders.lua"
not found in 'runtimepath': "lua/telescope/make_entry.lua"
not found in 'runtimepath': "lua/telescope/finders/async_static_finder.lua"
not found in 'runtimepath': "lua/plenary/async.lua"
not found in 'packpath': "pack/*/start/*/lua/plenary/async.lua"
not found in 'packpath': "start/*/lua/plenary/async.lua"
not found in 'runtimepath': "lua/plenary/async/init.lua"
not found in 'runtimepath': "lua/plenary/async/async.lua"
not found in 'runtimepath': "lua/plenary/vararg.lua"
not found in 'packpath': "pack/*/start/*/lua/plenary/vararg.lua"
not found in 'packpath': "start/*/lua/plenary/vararg.lua"
not found in 'runtimepath': "lua/plenary/vararg/init.lua"
not found in 'runtimepath': "lua/plenary/vararg/rotate.lua"
not found in 'runtimepath': "lua/plenary/errors.lua"
not found in 'runtimepath': "lua/plenary/async/tests.lua"
not found in 'runtimepath': "lua/plenary/async/util.lua"
not found in 'runtimepath': "lua/plenary/async/control.lua"
not found in 'runtimepath': "lua/plenary/async/structs.lua"
not found in 'runtimepath': "lua/telescope/finders/async_oneshot_finder.lua"
not found in 'runtimepath': "lua/telescope/_.lua"
not found in 'runtimepath': "lua/plenary/class.lua"
not found in 'runtimepath': "lua/telescope/finders/async_job_finder.lua"
not found in 'runtimepath': "lua/telescope/pickers.lua"
not found in 'runtimepath': "lua/telescope/debounce.lua"
not found in 'runtimepath': "lua/telescope/mappings.lua"
not found in 'runtimepath': "lua/telescope/pickers/highlights.lua"
not found in 'runtimepath': "lua/telescope/pickers/window.lua"
not found in 'runtimepath': "lua/telescope/entry_manager.lua"
not found in 'runtimepath': "lua/telescope/algos/linked_list.lua"
not found in 'runtimepath': "lua/telescope/pickers/multi.lua"
not found in 'runtimepath': "lua/telescope/builtin.lua"
not found in 'packpath': "pack/*/start/*/lua/telescope/builtin.lua"
not found in 'packpath': "start/*/lua/telescope/builtin.lua"
not found in 'runtimepath': "lua/telescope/builtin/init.lua"
not found in 'runtimepath': "lua/telescope/builtin/lsp.lua"
not found in 'runtimepath': "lua/project_nvim/utils/history.lua"
not found in 'runtimepath': "lua/project_nvim/utils/path.lua"
not found in 'runtimepath': "lua/project_nvim/config.lua"
not found in 'runtimepath': "lua/project_nvim/project.lua"
not found in 'runtimepath': "lua/project_nvim/utils/globtopattern.lua"
not found in 'runtimepath': "lua/telescope/_extensions/zoxide.lua"
not found in 'runtimepath': "lua/telescope/_extensions/zoxide/list.lua"
not found in 'runtimepath': "parser/c_sharp.so"
not found in 'runtimepath': "parser/bibtex.so"
not found in 'runtimepath': "parser/python.so"
not found in 'runtimepath': "parser/r.so"
not found in 'runtimepath': "parser/comment.so"
not found in 'runtimepath': "parser/lua.so"
not found in 'runtimepath': "parser/ocaml.so"
not found in 'runtimepath': "parser/go.so"
not found in 'runtimepath': "parser/ql.so"
not found in 'runtimepath': "parser/json.so"
not found in 'runtimepath': "parser/jsdoc.so"
not found in 'runtimepath': "parser/ledger.so"
not found in 'runtimepath': "parser/php.so"
not found in 'runtimepath': "parser/clojure.so"
not found in 'runtimepath': "parser/supercollider.so"
not found in 'runtimepath': "parser/typescript.so"
not found in 'runtimepath': "parser/fennel.so"
not found in 'runtimepath': "parser/query.so"
not found in 'runtimepath': "parser/cpp.so"
not found in 'runtimepath': "parser/vue.so"
not found in 'runtimepath': "parser/latex.so"
not found in 'runtimepath': "parser/rst.so"
not found in 'runtimepath': "parser/css.so"
not found in 'runtimepath': "parser/glimmer.so"
not found in 'runtimepath': "parser/erlang.so"
not found in 'runtimepath': "parser/regex.so"
not found in 'runtimepath': "parser/svelte.so"
not found in 'runtimepath': "parser/c.so"
not found in 'runtimepath': "parser/teal.so"
not found in 'runtimepath': "parser/java.so"
not found in 'runtimepath': "parser/gomod.so"
not found in 'runtimepath': "parser/dart.so"
not found in 'runtimepath': "parser/verilog.so"
not found in 'runtimepath': "parser/bash.so"
not found in 'runtimepath': "parser/yaml.so"
not found in 'runtimepath': "parser/julia.so"
not found in 'runtimepath': "parser/turtle.so"
not found in 'runtimepath': "parser/html.so"
not found in 'runtimepath': "parser/cmake.so"
not found in 'runtimepath': "parser/zig.so"
not found in 'runtimepath': "parser/tsx.so"
not found in 'runtimepath': "parser/commonlisp.so"
not found in 'runtimepath': "parser/ocaml_interface.so"
not found in 'runtimepath': "parser/beancount.so"
not found in 'runtimepath': "parser/elixir.so"
not found in 'runtimepath': "parser/cuda.so"
not found in 'runtimepath': "parser/ocamllex.so"
not found in 'runtimepath': "parser/kotlin.so"
not found in 'runtimepath': "parser/ruby.so"
not found in 'runtimepath': "parser/fish.so"
not found in 'runtimepath': "parser/devicetree.so"
not found in 'runtimepath': "parser/dockerfile.so"
not found in 'runtimepath': "parser/rust.so"
not found in 'runtimepath': "parser/toml.so"
not found in 'runtimepath': "parser/scss.so"
not found in 'runtimepath': "parser/javascript.so"
not found in 'runtimepath': "parser/jsonc.so"
not found in 'runtimepath': "parser/nix.so"
not found in 'runtimepath': "parser/graphql.so"
not found in 'runtimepath': "parser/gdscript.so"
not found in 'runtimepath': "parser/sparql.so"
not found in 'runtimepath': "parser/hcl.so"
not found in 'runtimepath': "lua/gitsigns.lua"
not found in 'runtimepath': "lua/gitsigns/status.lua"
not found in 'runtimepath': "lua/gitsigns/git.lua"
not found in 'runtimepath': "lua/gitsigns/debug.lua"
not found in 'runtimepath': "lua/gitsigns/util.lua"
not found in 'runtimepath': "lua/gitsigns/subprocess.lua"
not found in 'runtimepath': "lua/gitsigns/hunks.lua"
not found in 'runtimepath': "lua/gitsigns/signs.lua"
not found in 'runtimepath': "lua/gitsigns/config.lua"
not found in 'runtimepath': "lua/gitsigns/manager.lua"
not found in 'runtimepath': "lua/gitsigns/cache.lua"
not found in 'runtimepath': "lua/gitsigns/debounce.lua"
not found in 'runtimepath': "lua/gitsigns/highlight.lua"
                                                        use_internal_diff is now deprecated, please use diff_opts.internal
not found in 'runtimepath': "lua/indent_blankline.lua"
not found in 'packpath': "pack/*/start/*/lua/indent_blankline.lua"
not found in 'packpath': "start/*/lua/indent_blankline.lua"
not found in 'runtimepath': "lua/indent_blankline/init.lua"
not found in 'runtimepath': "lua/indent_blankline/utils.lua"
not found in 'runtimepath': "lua/bufferline.lua"
not found in 'runtimepath': "lua/bufferline/constants.lua"
not found in 'runtimepath': "lua/bufferline/utils.lua"
not found in 'runtimepath': "lua/bufferline/config.lua"
not found in 'runtimepath': "lua/lualine.lua"
not found in 'packpath': "pack/*/start/*/lua/lualine.lua"
not found in 'packpath': "start/*/lua/lualine.lua"
not found in 'runtimepath': "lua/lualine/init.lua"
not found in 'runtimepath': "lua/lualine/highlight.lua"
not found in 'runtimepath': "lua/lualine/utils/utils.lua"
not found in 'runtimepath': "lua/lualine/utils/loader.lua"
not found in 'runtimepath': "lua/lualine/utils/section.lua"
not found in 'runtimepath': "lua/lualine/config.lua"
not found in 'runtimepath': "lua/lualine/extensions/nvim-tree.lua"
not found in 'runtimepath': "lua/lualine/extensions/nerdtree.lua"
not found in 'runtimepath': "lua/colorizer.lua"
not found in 'runtimepath': "lua/colorizer/nvim.lua"
not found in 'runtimepath': "lua/colorizer/trie.lua"
not found in 'runtimepath': "lua/shade.lua"
not found in 'runtimepath': "lua/focus.lua"
not found in 'packpath': "pack/*/start/*/lua/focus.lua"
not found in 'packpath': "start/*/lua/focus.lua"
not found in 'runtimepath': "lua/focus/init.lua"
not found in 'runtimepath': "lua/focus/modules/config.lua"
not found in 'runtimepath': "lua/focus/modules/commands.lua"
not found in 'runtimepath': "lua/focus/modules/autocmd.lua"
not found in 'runtimepath': "lua/focus/modules/resizer.lua"
not found in 'runtimepath': "lua/focus/modules/utils.lua"
not found in 'runtimepath': "lua/focus/modules/split.lua"
not found in 'runtimepath': "lua/focus/modules/functions.lua"
not found in 'runtimepath': "lua/plugins/alpha.lua"
not found in 'packpath': "pack/*/start/*/lua/plugins/alpha.lua"
not found in 'packpath': "start/*/lua/plugins/alpha.lua"
not found in 'runtimepath': "lua/alpha.lua"
not found in 'runtimepath': "lua/alpha/themes/dashboard.lua"
not found in 'runtimepath': "lua/package-info.lua"
not found in 'packpath': "pack/*/start/*/lua/package-info.lua"
not found in 'packpath': "start/*/lua/package-info.lua"
not found in 'runtimepath': "lua/package-info/init.lua"
not found in 'runtimepath': "lua/package-info/config.lua"
not found in 'runtimepath': "lua/package-info/constants.lua"
not found in 'runtimepath': "lua/package-info/utils.lua"
not found in 'runtimepath': "lua/package-info/libs/json_parser.lua"
not found in 'runtimepath': "lua/package-info/logger.lua"
not found in 'runtimepath': "lua/package-info/modules/core.lua"
not found in 'runtimepath': "lua/nui/menu.lua"
not found in 'packpath': "pack/*/start/*/lua/nui/menu.lua"
not found in 'packpath': "start/*/lua/nui/menu.lua"
not found in 'runtimepath': "lua/nui/menu/init.lua"
not found in 'packpath': "pack/*/start/*/lua/nui/menu/init.lua"
not found in 'packpath': "start/*/lua/nui/menu/init.lua"
not found in 'runtimepath': "lua/nui/menu.so"
not found in 'packpath': "pack/*/start/*/lua/nui/menu.so"
not found in 'packpath': "start/*/lua/nui/menu.so"
not found in 'runtimepath': "lua/project_nvim.lua"
not found in 'packpath': "pack/*/start/*/lua/project_nvim.lua"
not found in 'packpath': "start/*/lua/project_nvim.lua"
not found in 'runtimepath': "lua/project_nvim/init.lua"
not found in 'runtimepath': "lua/tokyonight.lua"
not found in 'packpath': "pack/*/start/*/lua/tokyonight.lua"
not found in 'packpath': "start/*/lua/tokyonight.lua"
not found in 'runtimepath': "lua/tokyonight/init.lua"
not found in 'runtimepath': "lua/tokyonight/util.lua"
not found in 'runtimepath': "lua/tokyonight/hsluv.lua"
not found in 'runtimepath': "lua/tokyonight/theme.lua"
not found in 'runtimepath': "lua/tokyonight/colors.lua"
not found in 'runtimepath': "colors/tokyonight.vim"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim/colors)
chdir(/home/matt/.config/nvim)
line 0: sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim/colors/tokyonight.vim"
not found in 'runtimepath': "lua/tokyonight/config.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim/colors/tokyonight.vim
continuing in nvim_exec() called at /home/matt/.config/nvim/init.lua:0
Executing ColorScheme Autocommands for "*"
autocommand lua require("tokyonight.util").onColorScheme()

not found in 'runtimepath': "lua/packer/luarocks.lua"
not found in 'runtimepath': "lua/packer/clean.lua"
not found in 'runtimepath': "lua/packer/display.lua"
not found in 'runtimepath': "lua/packer/install.lua"
not found in 'runtimepath': "lua/packer/update.lua"
not found in 'runtimepath': "lua/packer/compile.lua"
not found in 'runtimepath': "lua/packer/plugin_types.lua"
not found in 'runtimepath': "lua/packer/handlers.lua"
not found in 'runtimepath': "lua/packer/plugin_types/git.lua"
finished sourcing /home/matt/.config/nvim/init.lua
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/indent.vim"
finished sourcing /usr/share/nvim/runtime/indent.vim
not found in 'packpath': "pack/*/start/*/indent.vim"
not found in 'packpath': "start/*/indent.vim"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/syntax)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/syntax/syntax.vim"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/syntax)
chdir(/home/matt/.config/nvim)
line 19: sourcing "/usr/share/nvim/runtime/syntax/synload.vim"
not found in 'runtimepath': "colors/tokyonight.vim"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim/colors)
chdir(/home/matt/.config/nvim)
line 19: sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim/colors/tokyonight.vim"
not found in 'runtimepath': "lua/tokyonight/config.lua"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/syntax)
chdir(/home/matt/.config/nvim)
line 0: sourcing "/usr/share/nvim/runtime/syntax/syncolor.vim"
finished sourcing /usr/share/nvim/runtime/syntax/syncolor.vim
continuing in nvim_exec() called at /home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim/colors/tokyonight.vim:9
not found in 'packpath': "pack/*/start/*/syntax/syncolor.vim"
not found in 'packpath': "start/*/syntax/syncolor.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim/colors/tokyonight.vim
continuing in /usr/share/nvim/runtime/syntax/synload.vim
Executing ColorScheme Autocommands for "*"
autocommand lua require("tokyonight.util").onColorScheme()

finished sourcing /usr/share/nvim/runtime/syntax/synload.vim
continuing in /usr/share/nvim/runtime/syntax/syntax.vim
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

finished sourcing /usr/share/nvim/runtime/syntax/syntax.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
not found in 'packpath': "start/*"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/gzip.vim"
finished sourcing /usr/share/nvim/runtime/plugin/gzip.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/health.vim"
finished sourcing /usr/share/nvim/runtime/plugin/health.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/man.vim"
finished sourcing /usr/share/nvim/runtime/plugin/man.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/matchit.vim"
not found in 'packpath': "pack/*/start/matchit"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/which-key.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/vim-wakatime)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/vim-commentary)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/trouble.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/telescope.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/telescope-zoxide)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/telescope-media-files.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/telescope-fzf-native.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/project.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/popup.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/plenary.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/packer.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/package-info.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-web-devicons)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-context-commentstring)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-autotag)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-textobjects)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-refactor)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-context)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-tree.lua)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-notify)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspinstall)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspconfig)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-lsp-ts-utils)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-colorizer.lua)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-cmp)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-bufferline.lua)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/null-ls.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/mkdir.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/lualine.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/lua-dev.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/lspsaga.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/lspkind-nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/lsp_signature.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/gitsigns.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/focus.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp_luasnip)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-path)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-buffer)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/alpha-nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/Shade.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/LuaSnip)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/usr/local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/pack/dist/opt)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/pack/dist/opt/matchit/plugin)
chdir(/home/matt/.config/nvim)
line 3: sourcing "/usr/share/nvim/runtime/pack/dist/opt/matchit/plugin/matchit.vim"
finished sourcing /usr/share/nvim/runtime/pack/dist/opt/matchit/plugin/matchit.vim
continuing in /usr/share/nvim/runtime/plugin/matchit.vim
finished sourcing /usr/share/nvim/runtime/plugin/matchit.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/matchparen.vim"
finished sourcing /usr/share/nvim/runtime/plugin/matchparen.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/netrwPlugin.vim"
finished sourcing /usr/share/nvim/runtime/plugin/netrwPlugin.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/rplugin.vim"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim)
chdir(/home/matt/.config/nvim)
line 3: sourcing "/home/matt/.local/share/nvim/rplugin.vim"
finished sourcing /home/matt/.local/share/nvim/rplugin.vim
continuing in function <SNR>27_LoadRemotePlugins
finished sourcing /usr/share/nvim/runtime/plugin/rplugin.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/shada.vim"
finished sourcing /usr/share/nvim/runtime/plugin/shada.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/spellfile.vim"
finished sourcing /usr/share/nvim/runtime/plugin/spellfile.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/tarPlugin.vim"
finished sourcing /usr/share/nvim/runtime/plugin/tarPlugin.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/tohtml.vim"
finished sourcing /usr/share/nvim/runtime/plugin/tohtml.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/tutor.vim"
finished sourcing /usr/share/nvim/runtime/plugin/tutor.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/zipPlugin.vim"
finished sourcing /usr/share/nvim/runtime/plugin/zipPlugin.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/vim/vimfiles/plugin/fzf.vim"
finished sourcing /usr/share/vim/vimfiles/plugin/fzf.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/vim/vimfiles/plugin/notmuch.vim"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/autoload/provider)
chdir(/home/matt/.config/nvim)
line 5: sourcing "/usr/share/nvim/runtime/autoload/provider/ruby.vim"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/autoload/remote)
chdir(/home/matt/.config/nvim)
line 72: sourcing "/usr/share/nvim/runtime/autoload/remote/host.vim"
finished sourcing /usr/share/nvim/runtime/autoload/remote/host.vim
continuing in /usr/share/nvim/runtime/autoload/provider/ruby.vim
finished sourcing /usr/share/nvim/runtime/autoload/provider/ruby.vim
continuing in /usr/share/vim/vimfiles/plugin/notmuch.vim
finished sourcing /usr/share/vim/vimfiles/plugin/notmuch.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/vim/vimfiles/plugin/redact_pass.vim"
finished sourcing /usr/share/vim/vimfiles/plugin/redact_pass.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.config/nvim/plugin/packer_compiled.lua"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
not found in 'packpath': "pack/*/opt/packer.nvim"
finished sourcing /home/matt/.config/nvim/plugin/packer_compiled.lua
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/LuaSnip/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/LuaSnip/plugin/luasnip.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/LuaSnip/plugin/luasnip.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim/plugin/indent_blankline.vim"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim/autoload)
chdir(/home/matt/.config/nvim)
line 0: sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim/autoload/indent_blankline.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim/autoload/indent_blankline.vim
continuing in nvim_exec() called at /home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim/plugin/indent_blankline.vim:30
not found in 'runtimepath': "queries//indents.scm"
not found in 'packpath': "pack/*/start/*/queries//indents.scm"
not found in 'packpath': "start/*/queries//indents.scm"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim/plugin/indent_blankline.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/lspsaga.nvim/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/lspsaga.nvim/plugin/lspsaga.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/lspsaga.nvim/plugin/lspsaga.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-cmp/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-cmp/plugin/cmp.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-cmp/plugin/cmp.lua
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-colorizer.lua/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-colorizer.lua/plugin/colorizer.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-colorizer.lua/plugin/colorizer.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/plugin/lspconfig.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/plugin/lspconfig.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspinstall/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspinstall/plugin/lspinstall.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspinstall/plugin/lspinstall.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-tree.lua/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-tree.lua/plugin/tree.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-tree.lua/plugin/tree.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/plugin/nvim-treesitter.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/plugin/nvim-treesitter.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gdscript.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gdscript.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gomod.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gomod.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/query.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/query.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-context/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-context/plugin/treesitter-context.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-context/plugin/treesitter-context.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-refactor/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-refactor/plugin/nvim-treesitter-refactor.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-refactor/plugin/nvim-treesitter-refactor.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-textobjects/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-textobjects/plugin/nvim-treesitter-textobjects.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-textobjects/plugin/nvim-treesitter-textobjects.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-autotag/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-autotag/plugin/nvim-ts-autotag.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-autotag/plugin/nvim-ts-autotag.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-context-commentstring/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-context-commentstring/plugin/ts_context_commentstring.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-context-commentstring/plugin/ts_context_commentstring.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-web-devicons/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-web-devicons/plugin/nvim-web-devicons.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-web-devicons/plugin/nvim-web-devicons.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/plenary.nvim/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/plenary.nvim/plugin/plenary.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/plenary.nvim/plugin/plenary.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/telescope.nvim/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/telescope.nvim/plugin/telescope.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/telescope.nvim/plugin/telescope.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/trouble.nvim/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/trouble.nvim/plugin/trouble.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/trouble.nvim/plugin/trouble.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/vim-commentary/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/vim-commentary/plugin/commentary.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/vim-commentary/plugin/commentary.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/vim-wakatime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/vim-wakatime/plugin/wakatime.vim"
Executing command: "set nonomatch; print -N >/tmp/nvimwpiJnu/1 $WAKATIME_HOME"

finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/vim-wakatime/plugin/wakatime.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/which-key.nvim/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/which-key.nvim/plugin/which-key.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/which-key.nvim/plugin/which-key.vim
not found in 'packpath': "start/*"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp_luasnip/after/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/cmp_luasnip/after/plugin/cmp_luasnip.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/cmp_luasnip/after/plugin/cmp_luasnip.vim
not found in 'packpath': "pack/*/start/*/plugin/**/*.vim"
not found in 'packpath': "start/*/plugin/**/*.vim"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp_luasnip/after/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/cmp_luasnip/after/plugin/cmp_luasnip.lua"
not found in 'runtimepath': "lua/cmp_luasnip.lua"
not found in 'packpath': "pack/*/start/*/lua/cmp_luasnip.lua"
not found in 'packpath': "start/*/lua/cmp_luasnip.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/cmp_luasnip/after/plugin/cmp_luasnip.lua
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-path/after/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/cmp-path/after/plugin/cmp_path.lua"
not found in 'runtimepath': "lua/cmp_path.lua"
not found in 'packpath': "pack/*/start/*/lua/cmp_path.lua"
not found in 'packpath': "start/*/lua/cmp_path.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/cmp-path/after/plugin/cmp_path.lua
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/plugin/cmp_nvim_lua.lua"
not found in 'runtimepath': "lua/cmp_nvim_lua.lua"
not found in 'packpath': "pack/*/start/*/lua/cmp_nvim_lua.lua"
not found in 'packpath': "start/*/lua/cmp_nvim_lua.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/plugin/cmp_nvim_lua.lua
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/plugin/cmp_nvim_lsp.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/plugin/cmp_nvim_lsp.lua
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/plugin/cmp_buffer.lua"
not found in 'runtimepath': "lua/cmp_buffer.lua"
not found in 'packpath': "pack/*/start/*/lua/cmp_buffer.lua"
not found in 'packpath': "start/*/lua/cmp_buffer.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/plugin/cmp_buffer.lua
not found in 'packpath': "pack/*/start/*/plugin/**/*.lua"
not found in 'packpath': "start/*/plugin/**/*.lua"
Reading ShaDa file "/home/matt/.local/share/nvim/shada/main.shada" info marks oldfiles
Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

not found in 'runtimepath': "ftplugin/NvimTree.vim ftplugin/NvimTree_*.vim ftplugin/NvimTree/*.vim"
not found in 'packpath': "pack/*/start/*/ftplugin/NvimTree.vim ftplugin/NvimTree_*.vim ftplugin/NvimTree/*.vim"
not found in 'packpath': "start/*/ftplugin/NvimTree.vim ftplugin/NvimTree_*.vim ftplugin/NvimTree/*.vim"
not found in 'runtimepath': "ftplugin/NvimTree.lua ftplugin/NvimTree_*.lua ftplugin/NvimTree/*.lua"
not found in 'packpath': "pack/*/start/*/ftplugin/NvimTree.lua ftplugin/NvimTree_*.lua ftplugin/NvimTree/*.lua"
not found in 'packpath': "start/*/ftplugin/NvimTree.lua ftplugin/NvimTree_*.lua ftplugin/NvimTree/*.lua"
Executing FileType Autocommands for "*"
autocommand unsilent lua require("null-ls.lspconfig").try_add()

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

not found in 'runtimepath': "indent/NvimTree.vim"
not found in 'packpath': "pack/*/start/*/indent/NvimTree.vim"
not found in 'packpath': "start/*/indent/NvimTree.vim"
not found in 'runtimepath': "indent/NvimTree.lua"
not found in 'packpath': "pack/*/start/*/indent/NvimTree.lua"
not found in 'packpath': "start/*/indent/NvimTree.lua"
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

not found in 'runtimepath': "syntax/NvimTree.vim syntax/NvimTree/*.vim"
not found in 'packpath': "pack/*/start/*/syntax/NvimTree.vim syntax/NvimTree/*.vim"
not found in 'packpath': "start/*/syntax/NvimTree.vim syntax/NvimTree/*.vim"
not found in 'runtimepath': "syntax/NvimTree.lua syntax/NvimTree/*.lua"
not found in 'packpath': "pack/*/start/*/syntax/NvimTree.lua syntax/NvimTree/*.lua"
not found in 'packpath': "start/*/syntax/NvimTree.lua syntax/NvimTree/*.lua"
Executing FileType Autocommands for "*"
autocommand IndentBlanklineRefresh

not found in 'runtimepath': "queries/NvimTree/indents.scm"
not found in 'packpath': "pack/*/start/*/queries/NvimTree/indents.scm"
not found in 'packpath': "start/*/queries/NvimTree/indents.scm"
not found in 'runtimepath': "parser/NvimTree.*"
not found in 'packpath': "pack/*/start/*/parser/NvimTree.*"
not found in 'packpath': "start/*/parser/NvimTree.*"
Executing FileType Autocommands for "*"
autocommand lua require'nvim-treesitter.configs'.reattach_module('incremental_selection')

autocommand lua require'nvim-treesitter.configs'.reattach_module('highlight')

autocommand lua require'nvim-treesitter.configs'.reattach_module('indent')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_definitions')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.navigation')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.smart_rename')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_current_scope')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.move')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.lsp_interop')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.select')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.swap')

autocommand lua require'nvim-treesitter.configs'.reattach_module('autotag')

autocommand lua require'nvim-treesitter.configs'.reattach_module('context_commentstring')

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing VimEnter Autocommands for "*"
autocommand lua require("which-key").load()

not found in 'runtimepath': "lua/which-key/plugins.lua"
not found in 'packpath': "pack/*/start/*/lua/which-key/plugins.lua"
not found in 'packpath': "start/*/lua/which-key/plugins.lua"
not found in 'runtimepath': "lua/which-key/plugins/presets.lua"
not found in 'packpath': "pack/*/start/*/lua/which-key/plugins/presets.lua"
not found in 'packpath': "start/*/lua/which-key/plugins/presets.lua"
autocommand lua require('gitsigns.manager').setup_signs_and_highlights()

Executing VimEnter Autocommands for "*"
autocommand lua require('bufferline').__load()

Executing VimEnter Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinEnter',  win_getid())

Executing VimEnter Autocommands for "*"
autocommand lua require'alpha'.start(true)

Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufDelete Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufWinEnter Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufWipeout Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

Executing OptionSet Autocommands for "list"
autocommand IndentBlanklineRefresh

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

not found in 'runtimepath': "ftplugin/alpha.vim ftplugin/alpha_*.vim ftplugin/alpha/*.vim"
not found in 'packpath': "pack/*/start/*/ftplugin/alpha.vim ftplugin/alpha_*.vim ftplugin/alpha/*.vim"
not found in 'packpath': "start/*/ftplugin/alpha.vim ftplugin/alpha_*.vim ftplugin/alpha/*.vim"
not found in 'runtimepath': "ftplugin/alpha.lua ftplugin/alpha_*.lua ftplugin/alpha/*.lua"
not found in 'packpath': "pack/*/start/*/ftplugin/alpha.lua ftplugin/alpha_*.lua ftplugin/alpha/*.lua"
not found in 'packpath': "start/*/ftplugin/alpha.lua ftplugin/alpha_*.lua ftplugin/alpha/*.lua"
Executing FileType Autocommands for "*"
autocommand unsilent lua require("null-ls.lspconfig").try_add()

Executing FileType Autocommands for "alpha"
autocommand set showtabline=0 | autocmd WinLeave <buffer> set showtabline=2

Executing FileType Autocommands for "alpha"
autocommand set noshowmode | au WinLeave <buffer> set showmode

autocommand set noruler | au WinLeave <buffer> set ruler

autocommand set laststatus=0 | au WinLeave <buffer> set laststatus=2

autocommand set noshowcmd | au WinLeave <buffer> set showcmd

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

not found in 'runtimepath': "indent/alpha.vim"
not found in 'packpath': "pack/*/start/*/indent/alpha.vim"
not found in 'packpath': "start/*/indent/alpha.vim"
not found in 'runtimepath': "indent/alpha.lua"
not found in 'packpath': "pack/*/start/*/indent/alpha.lua"
not found in 'packpath': "start/*/indent/alpha.lua"
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

not found in 'runtimepath': "syntax/alpha.vim syntax/alpha/*.vim"
not found in 'packpath': "pack/*/start/*/syntax/alpha.vim syntax/alpha/*.vim"
not found in 'packpath': "start/*/syntax/alpha.vim syntax/alpha/*.vim"
not found in 'runtimepath': "syntax/alpha.lua syntax/alpha/*.lua"
not found in 'packpath': "pack/*/start/*/syntax/alpha.lua syntax/alpha/*.lua"
not found in 'packpath': "start/*/syntax/alpha.lua syntax/alpha/*.lua"
Executing FileType Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing FileType Autocommands for "*"
autocommand lua require'nvim-treesitter.configs'.reattach_module('incremental_selection')

autocommand lua require'nvim-treesitter.configs'.reattach_module('highlight')

autocommand lua require'nvim-treesitter.configs'.reattach_module('indent')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_definitions')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.navigation')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.smart_rename')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_current_scope')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.move')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.lsp_interop')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.select')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.swap')

autocommand lua require'nvim-treesitter.configs'.reattach_module('autotag')

autocommand lua require'nvim-treesitter.configs'.reattach_module('context_commentstring')

Executing VimEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing VimEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/autoload/provider)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/autoload/provider/clipboard.vim"
finished sourcing /usr/share/nvim/runtime/autoload/provider/clipboard.vim
Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

not found in 'runtimepath': "parser/alpha.*"
not found in 'packpath': "pack/*/start/*/parser/alpha.*"
not found in 'packpath': "start/*/parser/alpha.*"
Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=5>"
autocommand call v:lua.alpha_set_cursor()

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()


--- Terminal info --- {{{
&term: xterm-kitty
Description: KovIdTTY
Aliases: xterm-kitty
Boolean capabilities:
  auto_left_margin          bw         = false
  auto_right_margin         am         = true
  no_esc_ctlc               xsb        = false
  ceol_standout_glitch      xhp        = false
  eat_newline_glitch        xenl       = true
  erase_overstrike          eo         = false
  generic_type              gn         = false
  hard_copy                 hc         = false
  has_meta_key              km         = true
  has_status_line           hs         = true
  insert_null_glitch        in         = false
  memory_above              da         = false
  memory_below              db         = false
  move_insert_mode          mir        = true
  move_standout_mode        msgr       = true
  over_strike               os         = false
  status_line_esc_ok        eslok      = false
  dest_tabs_magic_smso      xt         = false
  tilde_glitch              hz         = false
  transparent_underline     ul         = false
  xon_xoff                  xon        = false
  needs_xon_xoff            nxon       = false
  prtr_silent               mc5i       = true
  hard_cursor               chts       = false
  non_rev_rmcup             nrrmc      = false
  no_pad_char               npc        = true
  non_dest_scroll_region    ndscr      = false
  can_change                ccc        = true
  back_color_erase          bce        = false
  hue_lightness_saturation  hls        = false
  col_addr_glitch           xhpa       = false
  cr_cancels_micro_mode     crxm       = false
  has_print_wheel           daisy      = false
  row_addr_glitch           xvpa       = false
  semi_auto_right_margin    sam        = false
  cpi_changes_res           cpix       = false
  lpi_changes_res           lpix       = false
  backspaces_with_bs        OTbs       = false
  crt_no_scrolling          OTns       = false
  no_correctly_working_cr   OTnc       = false
  gnu_has_meta_key          OTMT       = false
  linefeed_is_newline       OTNL       = false
  has_hardware_tabs         OTpt       = false
  return_does_clr_eol       OTxr       = false
Numeric capabilities:
  columns                   cols       = 80
  init_tabs                 it         = 8
  lines                     lines      = 24
  lines_of_memory           lm         = -1
  magic_cookie_glitch       xmc        = -1
  padding_baud_rate         pb         = -1
  virtual_terminal          vt         = -1
  width_status_line         wsl        = -1
  num_labels                nlab       = -1
  label_height              lh         = -1
  label_width               lw         = -1
  max_attributes            ma         = -1
  maximum_windows           wnum       = -1
  max_colors                colors     = 256
  max_pairs                 pairs      = 32767
  no_color_video            ncv        = -1
  buffer_capacity           bufsz      = -1
  dot_vert_spacing          spinv      = -1
  dot_horz_spacing          spinh      = -1
  max_micro_address         maddr      = -1
  max_micro_jump            mjump      = -1
  micro_col_size            mcs        = -1
  micro_line_size           mls        = -1
  number_of_pins            npins      = -1
  output_res_char           orc        = -1
  output_res_line           orl        = -1
  output_res_horz_inch      orhi       = -1
  output_res_vert_inch      orvi       = -1
  print_rate                cps        = -1
  wide_char_size            widcs      = -1
  buttons                   btns       = -1
  bit_image_entwining       bitwin     = -1
  bit_image_type            bitype     = -1
  magic_cookie_glitch_ul    OTug       = -1
  carriage_return_delay     OTdC       = -1
  new_line_delay            OTdN       = -1
  backspace_delay           OTdB       = -1
  horizontal_tab_delay      OTdT       = -1
  number_of_function_keys   OTkn       = -1
String capabilities:
  back_tab                  cbt        = <Esc>[Z
  bell                      bel        = <C-G>
  carriage_return           cr         = <CR>
  change_scroll_region      csr        = <Esc>[%i%p1%d;%p2%dr
  clear_all_tabs            tbc        = <Esc>[3g
  clear_screen              clear      = <Esc>[H<Esc>[2J
  clr_eol                   el         = <Esc>[K
  clr_eos                   ed         = <Esc>[J
  column_address            hpa        = <Esc>[%i%p1%dG
  cursor_address            cup        = <Esc>[%i%p1%d;%p2%dH
  cursor_down               cud1       = <NL>
  cursor_home               home       = <Esc>[H
  cursor_invisible          civis      = <Esc>[?25l
  cursor_left               cub1       = <C-H>
  cursor_normal             cnorm      = <Esc>[?12h<Esc>[?25h
  cursor_right              cuf1       = <Esc>[C
  cursor_up                 cuu1       = <Esc>[A
  cursor_visible            cvvis      = <Esc>[?12;25h
  delete_character          dch1       = <Esc>[P
  delete_line               dl1        = <Esc>[M
  dis_status_line           dsl        = <Esc>]2;<C-G>
  enter_alt_charset_mode    smacs      = <Esc>(0
  enter_bold_mode           bold       = <Esc>[1m
  enter_ca_mode             smcup      = <Esc>[?1049h
  enter_dim_mode            dim        = <Esc>[2m
  enter_insert_mode         smir       = <Esc>[4h
  enter_reverse_mode        rev        = <Esc>[7m
  enter_standout_mode       smso       = <Esc>[7m
  enter_underline_mode      smul       = <Esc>[4m
  erase_chars               ech        = <Esc>[%p1%dX
  exit_alt_charset_mode     rmacs      = <Esc>(B
  exit_attribute_mode       sgr0       = <Esc>(B<Esc>[m
  exit_ca_mode              rmcup      = <Esc>[?1049l
  exit_insert_mode          rmir       = <Esc>[4l
  exit_standout_mode        rmso       = <Esc>[27m
  exit_underline_mode       rmul       = <Esc>[24m
  flash_screen              flash      = <Esc>[?5h$<100/><Esc>[?5l
  from_status_line          fsl        = <C-G>
  insert_line               il1        = <Esc>[L
  key_backspace             kbs        = <^?>
  key_dc                    kdch1      = <Esc>[3~
  key_down                  kcud1      = <Esc>OB
  key_f1                    kf1        = <Esc>OP
  key_f10                   kf10       = <Esc>[21~
  key_f2                    kf2        = <Esc>OQ
  key_f3                    kf3        = <Esc>OR
  key_f4                    kf4        = <Esc>OS
  key_f5                    kf5        = <Esc>[15~
  key_f6                    kf6        = <Esc>[17~
  key_f7                    kf7        = <Esc>[18~
  key_f8                    kf8        = <Esc>[19~
  key_f9                    kf9        = <Esc>[20~
  key_home                  khome      = <Esc>OH
  key_ic                    kich1      = <Esc>[2~
  key_left                  kcub1      = <Esc>OD
  key_npage                 knp        = <Esc>[6~
  key_ppage                 kpp        = <Esc>[5~
  key_right                 kcuf1      = <Esc>OC
  key_sf                    kind       = <Esc>[1;2B
  key_sr                    kri        = <Esc>[1;2A
  key_up                    kcuu1      = <Esc>OA
  keypad_local              rmkx       = <Esc>[?1l
  keypad_xmit               smkx       = <Esc>[?1h
  parm_dch                  dch        = <Esc>[%p1%dP
  parm_delete_line          dl         = <Esc>[%p1%dM
  parm_down_cursor          cud        = <Esc>[%p1%dB
  parm_ich                  ich        = <Esc>[%p1%d@
  parm_index                indn       = <Esc>[%p1%dS
  parm_insert_line          il         = <Esc>[%p1%dL
  parm_left_cursor          cub        = <Esc>[%p1%dD
  parm_right_cursor         cuf        = <Esc>[%p1%dC
  parm_rindex               rin        = <Esc>[%p1%dT
  parm_up_cursor            cuu        = <Esc>[%p1%dA
  repeat_char               rep        = %p1%c<Esc>[%p2%{1}%-%db
  reset_1string             rs1        = <Esc>]<Esc>\<Esc>c
  restore_cursor            rc         = <Esc>8
  row_address               vpa        = <Esc>[%i%p1%dd
  save_cursor               sc         = <Esc>7
  scroll_forward            ind        = <NL>
  scroll_reverse            ri         = <Esc>M
  set_attributes            sgr        = %?%p9%t<Esc>(0%e<Esc>(B%;<Esc>[0%?%p6%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;%?%p7%t;8%;m
  set_tab                   hts        = <Esc>H
  tab                       ht         = <Tab>
  to_status_line            tsl        = <Esc>]2;
  key_a1                    ka1        = 
  key_a3                    ka3        = 
  key_c1                    kc1        = 
  key_c3                    kc3        = 
  acs_chars                 acsc       = ++,,--..00``aaffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~
  key_btab                  kcbt       = <Esc>[Z
  enter_am_mode             smam       = <Esc>[?7h
  exit_am_mode              rmam       = <Esc>[?7l
  key_end                   kend       = <Esc>OF
  key_help                  khlp       = 
  key_undo                  kund       = 
  key_sdc                   kDC        = <Esc>[3;2~
  key_send                  kEND       = <Esc>[1;2F
  key_shome                 kHOM       = <Esc>[1;2H
  key_sic                   kIC        = <Esc>[2;2~
  key_sleft                 kLFT       = <Esc>[1;2D
  key_snext                 kNXT       = <Esc>[6;2~
  key_sprevious             kPRV       = <Esc>[5;2~
  key_sright                kRIT       = <Esc>[1;2C
  key_f11                   kf11       = <Esc>[23~
  key_f12                   kf12       = <Esc>[24~
  key_f13                   kf13       = <Esc>[1;2P
  key_f14                   kf14       = <Esc>[1;2Q
  key_f15                   kf15       = <Esc>[1;2R
  key_f16                   kf16       = <Esc>[1;2S
  key_f17                   kf17       = <Esc>[15;2~
  key_f18                   kf18       = <Esc>[17;2~
  key_f19                   kf19       = <Esc>[18;2~
  key_f20                   kf20       = <Esc>[19;2~
  key_f21                   kf21       = <Esc>[20;2~
  key_f22                   kf22       = <Esc>[21;2~
  key_f23                   kf23       = <Esc>[23;2~
  key_f24                   kf24       = <Esc>[24;2~
  key_f25                   kf25       = <Esc>[1;5P
  key_f26                   kf26       = <Esc>[1;5Q
  key_f27                   kf27       = <Esc>[1;5R
  key_f28                   kf28       = <Esc>[1;5S
  key_f29                   kf29       = <Esc>[15;5~
  key_f30                   kf30       = <Esc>[17;5~
  key_f31                   kf31       = <Esc>[18;5~
  key_f32                   kf32       = <Esc>[19;5~
  key_f33                   kf33       = <Esc>[20;5~
  key_f34                   kf34       = <Esc>[21;5~
  key_f35                   kf35       = <Esc>[23;5~
  key_f36                   kf36       = <Esc>[24;5~
  key_f37                   kf37       = <Esc>[1;6P
  key_f38                   kf38       = <Esc>[1;6Q
  key_f39                   kf39       = <Esc>[1;6R
  key_f40                   kf40       = <Esc>[1;6S
  key_f41                   kf41       = <Esc>[15;6~
  key_f42                   kf42       = <Esc>[17;6~
  key_f43                   kf43       = <Esc>[18;6~
  key_f44                   kf44       = <Esc>[19;6~
  key_f45                   kf45       = <Esc>[20;6~
  key_f46                   kf46       = <Esc>[21;6~
  key_f47                   kf47       = <Esc>[23;6~
  key_f48                   kf48       = <Esc>[24;6~
  key_f49                   kf49       = <Esc>[1;3P
  key_f50                   kf50       = <Esc>[1;3Q
  key_f51                   kf51       = <Esc>[1;3R
  key_f52                   kf52       = <Esc>[1;3S
  key_f53                   kf53       = <Esc>[15;3~
  key_f54                   kf54       = <Esc>[17;3~
  key_f55                   kf55       = <Esc>[18;3~
  key_f56                   kf56       = <Esc>[19;3~
  key_f57                   kf57       = <Esc>[20;3~
  key_f58                   kf58       = <Esc>[21;3~
  key_f59                   kf59       = <Esc>[23;3~
  key_f60                   kf60       = <Esc>[24;3~
  key_f61                   kf61       = <Esc>[1;4P
  key_f62                   kf62       = <Esc>[1;4Q
  key_f63                   kf63       = <Esc>[1;4R
  clr_bol                   el1        = <Esc>[1K
  user6                     u6         = <Esc>[%i%d;%dR
  user7                     u7         = <Esc>[6n
  user8                     u8         = <Esc>[?%[;0123456789]c
  user9                     u9         = <Esc>[c
  orig_pair                 op         = <Esc>[39;49m
  orig_colors               oc         = <Esc>]104<C-G>
  initialize_color          initc      = <Esc>]4;%p1%d;rgb:%p2%{255}%*%{1000}%/%2.2X/%p3%{255}%*%{1000}%/%2.2X/%p4%{255}%*%{1000}%/%2.2X<Esc>\
  enter_italics_mode        sitm       = <Esc>[3m
  exit_italics_mode         ritm       = <Esc>[23m
  key_mouse                 kmous      = <Esc>[M
  set_a_foreground          setaf      = <Esc>[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m
  set_a_background          setab      = <Esc>[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%t10%p1%{8}%-%d%e48;5;%p1%d%;m
  set_tb_margin             smgtb      = <Esc>[%i%p1%d;%p2%dr
Extended boolean capabilities:
  Su                        = true
  Tc                        = true
  fullkbd                   = true
Extended string capabilities:
  Smulx                     = <Esc>[4:%p1%dm
  Sync                      = <Esc>P=%p1%ds<Esc>\
  kDC3                      = <Esc>[3;3~
  kDC4                      = <Esc>[3;4~
  kDC5                      = <Esc>[3;5~
  kDC6                      = <Esc>[3;6~
  kDC7                      = <Esc>[3;7~
  kDN                       = <Esc>[1;2B
  kDN3                      = <Esc>[1;3B
  kDN4                      = <Esc>[1;4B
  kDN5                      = <Esc>[1;5B
  kDN6                      = <Esc>[1;6B
  kDN7                      = <Esc>[1;7B
  kEND3                     = <Esc>[1;3F
  kEND4                     = <Esc>[1;4F
  kEND5                     = <Esc>[1;5F
  kEND6                     = <Esc>[1;6F
  kEND7                     = <Esc>[1;7F
  kHOM3                     = <Esc>[1;3H
  kHOM4                     = <Esc>[1;4H
  kHOM5                     = <Esc>[1;5H
  kHOM6                     = <Esc>[1;6H
  kHOM7                     = <Esc>[1;7H
  kIC3                      = <Esc>[2;3~
  kIC4                      = <Esc>[2;4~
  kIC5                      = <Esc>[2;5~
  kIC6                      = <Esc>[2;6~
  kIC7                      = <Esc>[2;7~
  kLFT3                     = <Esc>[1;3D
  kLFT4                     = <Esc>[1;4D
  kLFT5                     = <Esc>[1;5D
  kLFT6                     = <Esc>[1;6D
  kLFT7                     = <Esc>[1;7D
  kNXT3                     = <Esc>[6;3~
  kNXT4                     = <Esc>[6;4~
  kNXT5                     = <Esc>[6;5~
  kNXT6                     = <Esc>[6;6~
  kNXT7                     = <Esc>[6;7~
  kPRV3                     = <Esc>[5;3~
  kPRV4                     = <Esc>[5;4~
  kPRV5                     = <Esc>[5;5~
  kPRV6                     = <Esc>[5;6~
  kPRV7                     = <Esc>[5;7~
  kRIT3                     = <Esc>[1;3C
  kRIT4                     = <Esc>[1;4C
  kRIT5                     = <Esc>[1;5C
  kRIT6                     = <Esc>[1;6C
  kRIT7                     = <Esc>[1;7C
  kUP                       = <Esc>[1;2A
  kUP3                      = <Esc>[1;3A
  kUP4                      = <Esc>[1;4A
  kUP5                      = <Esc>[1;5A
  kUP6                      = <Esc>[1;6A
  kUP7                      = <Esc>[1;7A
  rmxx                      = <Esc>[29m
  setrgbb                   = <Esc>[48:2:%p1%d:%p2%d:%p3%dm
  setrgbf                   = <Esc>[38:2:%p1%d:%p2%d:%p3%dm
  smxx                      = <Esc>[9m
  ext.get_bg                = <Esc>]11;?<C-G>
  Ss                        = <Esc>[%p1%d q
  Se                        = <Esc>[ q
  ext.resize_screen         = <Esc>[8;%p1%d;%p2%dt
  ext.reset_scroll_region   = <Esc>[r
  ext.set_cursor_color      = <Esc>]12;#%p1%06x<C-G>
  ext.reset_cursor_color    = <Esc>]112<C-G>
  ext.save_title            = <Esc>[22;0t
  ext.restore_title         = <Esc>[23;0t
  ext.enable_lr_margin      = <Esc>[?69h
  ext.disable_lr_margin     = <Esc>[?69l
  ext.enable_bpaste         = <Esc>[?2004h
  ext.disable_bpaste        = <Esc>[?2004l
  ext.enable_focus          = <Esc>[?1004h
  ext.disable_focus         = <Esc>[?1004l
  ext.enable_mouse          = <Esc>[?1002h<Esc>[?1006h
  ext.disable_mouse         = <Esc>[?1002l<Esc>[?1006l
  ext.set_underline_color   = <Esc>[58:2::%p1%d:%p2%d:%p3%dm
}}}

Executing command: "'/usr/bin/zsh' '-c' 'git -C '/home/matt/.config/nvim' rev-parse --show-toplevel'"


Executing command: "'/usr/bin/zsh' '-c' 'git -C '/home/matt/.config/nvim' config --type=bool status.showUntrackedFiles'"


Executing command: "'/usr/bin/zsh' '-c' 'git -C '/home/matt/.config/nvim' status --porcelain=v1 --ignored=matching -u'"


Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/plugin)
chdir(/home/matt/.config/nvim)
line 0: sourcing "/home/matt/.config/nvim/plugin/packer_compiled.lua"
not found in 'packpath': "pack/*/opt/packer.nvim"
finished sourcing /home/matt/.config/nvim/plugin/packer_compiled.lua
continuing in nvim_exec()
remote/host: generated rplugin manifest: /home/matt/.local/share/nvim/rplugin.vim

Executing WinLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing WinLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing WinLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing WinLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing WinLeave Autocommands for "*"
autocommand silent lua require("treesitter-context").close()

Executing WinLeave Autocommands for "<buffer=5>"
autocommand set showtabline=2

autocommand set showmode

autocommand set ruler

autocommand set laststatus=2

autocommand set showcmd

Executing WinEnter Autocommands for "*"
autocommand set statusline<

Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinEnter',  win_getid())

Executing WinEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing WinEnter Autocommands for "*"
autocommand set number relativenumber

Executing WinEnter Autocommands for "*"
autocommand setlocal cursorline

Executing WinEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=5>"
autocommand call v:lua.alpha_set_cursor()

Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufWinEnter Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing OptionSet Autocommands for "list"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()


Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing WinLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing WinLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing WinLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing WinLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing WinLeave Autocommands for "*"
autocommand silent lua require("treesitter-context").close()

Executing WinEnter Autocommands for "*"
autocommand set statusline<

Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinEnter',  win_getid())

Executing WinEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing WinEnter Autocommands for "*"
autocommand set number relativenumber

Executing WinEnter Autocommands for "*"
autocommand setlocal cursorline

Executing WinEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=5>"
autocommand call v:lua.alpha_set_cursor()

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufUnload Autocommands for "<buffer=5>"
autocommand call v:lua.alpha_close()

Executing BufWipeout Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

auto-removing autocommand: WinLeave <buffer=5>
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
"~/.config/nvim/nvim.log" [noeol] 2840L, 124320C
Reading ShaDa file "/home/matt/.local/share/nvim/shada/main.shada" marks
Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif

chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime)
chdir(/home/matt/.config/nvim)
line 0: sourcing "/usr/share/nvim/runtime/scripts.vim"
finished sourcing /usr/share/nvim/runtime/scripts.vim
continuing in BufReadPost Autocommands for "*"
not found in 'packpath': "pack/*/start/*/scripts.vim"
not found in 'packpath': "start/*/scripts.vim"
Executing BufReadPost Autocommands for "*"
autocommand call <SID>neomutt_log()

Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif

Executing BufReadPost Autocommands for "*"
autocommand if @% !~# '\.git[\/\\]COMMIT_EDITMSG$' && line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif 

Executing BufReadPost Autocommands for "*"
autocommand lua _G.package.loaded.gitsigns.attach(nil, 'BufRead')

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufWinEnter Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing WinClosed Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinClosed', expand('<afile>'))

Executing WinClosed Autocommands for "*"
autocommand lua require'nvim-tree'.on_leave()

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

/dif                                                                                                                                                                            

/dif                                                                                                                                                                       [1/5]
Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)
-- VISUAL ---- VISUAL --
Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

"~/.config/nvim/nvim.log" 
"~/.config/nvim/nvim.log" [noeol] 6413L, 243104C
Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif

Executing BufReadPost Autocommands for "*"
autocommand call <SID>neomutt_log()

Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif

Executing BufReadPost Autocommands for "*"
autocommand if @% !~# '\.git[\/\\]COMMIT_EDITMSG$' && line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif 

Executing BufReadPost Autocommands for "*"
autocommand lua _G.package.loaded.gitsigns.attach(nil, 'BufRead')

Writing undo file: /home/matt/.local/share/nvim/undo/%home%matt%.config%nvim%nvim.log
Executing FileChangedShellPost Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()


Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing WinLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing WinLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing WinLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing WinLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing WinLeave Autocommands for "*"
autocommand silent lua require("treesitter-context").close()

Executing WinEnter Autocommands for "*"
autocommand set statusline<

Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinEnter',  win_getid())

Executing WinEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing WinEnter Autocommands for "*"
autocommand set number relativenumber

Executing WinEnter Autocommands for "*"
autocommand setlocal cursorline

Executing WinEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

not found in 'runtimepath': "ftplugin/TelescopePrompt.vim ftplugin/TelescopePrompt_*.vim ftplugin/TelescopePrompt/*.vim"
not found in 'packpath': "pack/*/start/*/ftplugin/TelescopePrompt.vim ftplugin/TelescopePrompt_*.vim ftplugin/TelescopePrompt/*.vim"
not found in 'packpath': "start/*/ftplugin/TelescopePrompt.vim ftplugin/TelescopePrompt_*.vim ftplugin/TelescopePrompt/*.vim"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin)
chdir(/home/matt/.config/nvim)
line 19: sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopePrompt.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopePrompt.lua
continuing in function <SNR>14_LoadFTPlugin
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin)
chdir(/home/matt/.config/nvim)
line 19: sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopePrompt.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/telescope.nvim/ftplugin/TelescopePrompt.lua
continuing in function <SNR>14_LoadFTPlugin
not found in 'packpath': "start/*/ftplugin/TelescopePrompt.lua ftplugin/TelescopePrompt_*.lua ftplugin/TelescopePrompt/*.lua"
Executing FileType Autocommands for "*"
autocommand unsilent lua require("null-ls.lspconfig").try_add()

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

not found in 'runtimepath': "indent/TelescopePrompt.vim"
not found in 'packpath': "pack/*/start/*/indent/TelescopePrompt.vim"
not found in 'packpath': "start/*/indent/TelescopePrompt.vim"
not found in 'runtimepath': "indent/TelescopePrompt.lua"
not found in 'packpath': "pack/*/start/*/indent/TelescopePrompt.lua"
not found in 'packpath': "start/*/indent/TelescopePrompt.lua"
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

not found in 'runtimepath': "syntax/TelescopePrompt.vim syntax/TelescopePrompt/*.vim"
not found in 'packpath': "pack/*/start/*/syntax/TelescopePrompt.vim syntax/TelescopePrompt/*.vim"
not found in 'packpath': "start/*/syntax/TelescopePrompt.vim syntax/TelescopePrompt/*.vim"
not found in 'runtimepath': "syntax/TelescopePrompt.lua syntax/TelescopePrompt/*.lua"
not found in 'packpath': "pack/*/start/*/syntax/TelescopePrompt.lua syntax/TelescopePrompt/*.lua"
not found in 'packpath': "start/*/syntax/TelescopePrompt.lua syntax/TelescopePrompt/*.lua"
Executing FileType Autocommands for "*"
autocommand IndentBlanklineRefresh

not found in 'runtimepath': "queries/TelescopePrompt/indents.scm"
not found in 'packpath': "pack/*/start/*/queries/TelescopePrompt/indents.scm"
not found in 'packpath': "start/*/queries/TelescopePrompt/indents.scm"
not found in 'runtimepath': "parser/TelescopePrompt.*"
not found in 'packpath': "pack/*/start/*/parser/TelescopePrompt.*"
not found in 'packpath': "start/*/parser/TelescopePrompt.*"
Executing FileType Autocommands for "*"
autocommand lua require'nvim-treesitter.configs'.reattach_module('incremental_selection')

autocommand lua require'nvim-treesitter.configs'.reattach_module('highlight')

autocommand lua require'nvim-treesitter.configs'.reattach_module('indent')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_definitions')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.navigation')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.smart_rename')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_current_scope')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.move')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.lsp_interop')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.select')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.swap')

autocommand lua require'nvim-treesitter.configs'.reattach_module('autotag')

autocommand lua require'nvim-treesitter.configs'.reattach_module('context_commentstring')

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

not found in 'runtimepath': "ftplugin/TelescopeResults.vim ftplugin/TelescopeResults_*.vim ftplugin/TelescopeResults/*.vim"
not found in 'packpath': "pack/*/start/*/ftplugin/TelescopeResults.vim ftplugin/TelescopeResults_*.vim ftplugin/TelescopeResults/*.vim"
not found in 'packpath': "start/*/ftplugin/TelescopeResults.vim ftplugin/TelescopeResults_*.vim ftplugin/TelescopeResults/*.vim"
not found in 'runtimepath': "ftplugin/TelescopeResults.lua ftplugin/TelescopeResults_*.lua ftplugin/TelescopeResults/*.lua"
not found in 'packpath': "pack/*/start/*/ftplugin/TelescopeResults.lua ftplugin/TelescopeResults_*.lua ftplugin/TelescopeResults/*.lua"
not found in 'packpath': "start/*/ftplugin/TelescopeResults.lua ftplugin/TelescopeResults_*.lua ftplugin/TelescopeResults/*.lua"
Executing FileType Autocommands for "*"
autocommand unsilent lua require("null-ls.lspconfig").try_add()

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

not found in 'runtimepath': "indent/TelescopeResults.vim"
not found in 'packpath': "pack/*/start/*/indent/TelescopeResults.vim"
not found in 'packpath': "start/*/indent/TelescopeResults.vim"
not found in 'runtimepath': "indent/TelescopeResults.lua"
not found in 'packpath': "pack/*/start/*/indent/TelescopeResults.lua"
not found in 'packpath': "start/*/indent/TelescopeResults.lua"
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

not found in 'runtimepath': "syntax/TelescopeResults.vim syntax/TelescopeResults/*.vim"
not found in 'packpath': "pack/*/start/*/syntax/TelescopeResults.vim syntax/TelescopeResults/*.vim"
not found in 'packpath': "start/*/syntax/TelescopeResults.vim syntax/TelescopeResults/*.vim"
not found in 'runtimepath': "syntax/TelescopeResults.lua syntax/TelescopeResults/*.lua"
not found in 'packpath': "pack/*/start/*/syntax/TelescopeResults.lua syntax/TelescopeResults/*.lua"
not found in 'packpath': "start/*/syntax/TelescopeResults.lua syntax/TelescopeResults/*.lua"
Executing FileType Autocommands for "*"
autocommand IndentBlanklineRefresh

not found in 'runtimepath': "queries/TelescopeResults/indents.scm"
not found in 'packpath': "pack/*/start/*/queries/TelescopeResults/indents.scm"
not found in 'packpath': "start/*/queries/TelescopeResults/indents.scm"
not found in 'runtimepath': "parser/TelescopeResults.*"
not found in 'packpath': "pack/*/start/*/parser/TelescopeResults.*"
not found in 'packpath': "start/*/parser/TelescopeResults.*"
Executing FileType Autocommands for "*"
autocommand lua require'nvim-treesitter.configs'.reattach_module('incremental_selection')

autocommand lua require'nvim-treesitter.configs'.reattach_module('highlight')

autocommand lua require'nvim-treesitter.configs'.reattach_module('indent')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_definitions')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.navigation')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.smart_rename')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_current_scope')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.move')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.lsp_interop')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.select')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.swap')

autocommand lua require'nvim-treesitter.configs'.reattach_module('autotag')

autocommand lua require'nvim-treesitter.configs'.reattach_module('context_commentstring')

Executing InsertEnter Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('InsertEnter')

Executing InsertEnter Autocommands for "*"
autocommand lua require'cmp_nvim_lsp'._on_insert_enter()
-- INSERT --
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()
-- INSERT --
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufWipeout Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

auto-removing autocommand: BufDelete <buffer=12>
auto-removing autocommand: WinClosed <buffer=12>
Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufWinEnter Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

not found in 'packpath': "start/*/queries/lua/injections.scm"
not found in 'runtimepath': "queries/comment/injections.scm"
not found in 'packpath': "pack/*/start/*/queries/comment/injections.scm"
not found in 'packpath': "start/*/queries/comment/injections.scm"
Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

not found in 'packpath': "start/*/queries/lua/highlights.scm"-- INSERT --
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufWinEnter Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

not found in 'runtimepath': "parser/text.*"
not found in 'packpath': "pack/*/start/*/parser/text.*"
not found in 'packpath': "start/*/parser/text.*"
Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

not found in 'runtimepath': "syntax/text.vim syntax/text/*.vim"
not found in 'packpath': "pack/*/start/*/syntax/text.vim syntax/text/*.vim"
not found in 'packpath': "start/*/syntax/text.vim syntax/text/*.vim"
not found in 'runtimepath': "syntax/text.lua syntax/text/*.lua"
not found in 'packpath': "pack/*/start/*/syntax/text.lua syntax/text/*.lua"
not found in 'packpath': "start/*/syntax/text.lua syntax/text/*.lua"-- INSERT --
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufWinEnter Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

not found in 'packpath': "start/*/queries/lua/injections.scm"
not found in 'runtimepath': "queries/comment/injections.scm"
not found in 'packpath': "pack/*/start/*/queries/comment/injections.scm"
not found in 'packpath': "start/*/queries/comment/injections.scm"
Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

not found in 'packpath': "start/*/queries/lua/highlights.scm"
not found in 'packpath': "start/*/queries/comment/highlights.scm"-- INSERT --
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()


Executing BufWipeout Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

Executing BufWipeout Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

Executing WinClosed Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinClosed', expand('<afile>'))

Executing WinClosed Autocommands for "*"
autocommand lua require'nvim-tree'.on_leave()

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufWipeout Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing BufLeave Autocommands for "<buffer=14>"
autocommand :silent lua require('telescope.pickers').on_close_prompt(14)

Executing WinClosed Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinClosed', expand('<afile>'))

Executing WinClosed Autocommands for "*"
autocommand lua require'nvim-tree'.on_leave()

Executing WinClosed Autocommands for "<buffer=10>"
autocommand :lua require('plenary.window').try_close(1006, true)

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufWipeout Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufWipeout Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

auto-removing autocommand: BufDelete <buffer=10>
auto-removing autocommand: WinClosed <buffer=10>
Executing WinClosed Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinClosed', expand('<afile>'))

Executing WinClosed Autocommands for "*"
autocommand lua require'nvim-tree'.on_leave()

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufWipeout Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

Executing WinClosed Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinClosed', expand('<afile>'))

Executing WinClosed Autocommands for "*"
autocommand lua require'nvim-tree'.on_leave()

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufWipeout Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

Executing WinLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing WinLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing WinLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing WinLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing WinLeave Autocommands for "*"
autocommand silent lua require("treesitter-context").close()

Executing WinClosed Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinClosed', expand('<afile>'))

Executing WinClosed Autocommands for "*"
autocommand lua require'nvim-tree'.on_leave()

Executing WinClosed Autocommands for "<buffer=14>"
autocommand :lua require('plenary.window').try_close(1010, true)

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufWipeout Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

auto-removing autocommand: BufDelete <buffer=14>
Executing WinEnter Autocommands for "*"
autocommand set statusline<

Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinEnter',  win_getid())

Executing WinEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing WinEnter Autocommands for "*"
autocommand set number relativenumber

Executing WinEnter Autocommands for "*"
autocommand setlocal cursorline

Executing WinEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
"./lua/plugins/gitsigns.lua" 81L, 3051C
Reading ShaDa file "/home/matt/.local/share/nvim/shada/main.shada" marks
Executing BufReadPost Autocommands for "*.lua"
autocommand setf lua

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/ftplugin)
chdir(/home/matt/.config/nvim)
line 17: sourcing "/usr/share/nvim/runtime/ftplugin/lua.vim"
finished sourcing /usr/share/nvim/runtime/ftplugin/lua.vim
continuing in function <SNR>14_LoadFTPlugin
not found in 'packpath': "pack/*/start/*/ftplugin/lua.vim ftplugin/lua_*.vim ftplugin/lua/*.vim"
not found in 'packpath': "start/*/ftplugin/lua.vim ftplugin/lua_*.vim ftplugin/lua/*.vim"
not found in 'runtimepath': "ftplugin/lua.lua ftplugin/lua_*.lua ftplugin/lua/*.lua"
not found in 'packpath': "pack/*/start/*/ftplugin/lua.lua ftplugin/lua_*.lua ftplugin/lua/*.lua"
not found in 'packpath': "start/*/ftplugin/lua.lua ftplugin/lua_*.lua ftplugin/lua/*.lua"
Executing FileType Autocommands for "*"
autocommand unsilent lua require("null-ls.lspconfig").try_add()

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/indent)
chdir(/home/matt/.config/nvim)
line 14: sourcing "/usr/share/nvim/runtime/indent/lua.vim"
finished sourcing /usr/share/nvim/runtime/indent/lua.vim
continuing in function <SNR>16_LoadIndent
not found in 'packpath': "pack/*/start/*/indent/lua.vim"
not found in 'packpath': "start/*/indent/lua.vim"
not found in 'runtimepath': "indent/lua.lua"
not found in 'packpath': "pack/*/start/*/indent/lua.lua"
not found in 'packpath': "start/*/indent/lua.lua"
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/syntax)
chdir(/home/matt/.config/nvim)
line 25: sourcing "/usr/share/nvim/runtime/syntax/lua.vim"
finished sourcing /usr/share/nvim/runtime/syntax/lua.vim
continuing in function <SNR>18_SynSet
not found in 'packpath': "pack/*/start/*/syntax/lua.vim syntax/lua/*.vim"
not found in 'packpath': "start/*/syntax/lua.vim syntax/lua/*.vim"
not found in 'runtimepath': "syntax/lua.lua syntax/lua/*.lua"
not found in 'packpath': "pack/*/start/*/syntax/lua.lua syntax/lua/*.lua"
not found in 'packpath': "start/*/syntax/lua.lua syntax/lua/*.lua"
Executing FileType Autocommands for "*"
autocommand IndentBlanklineRefresh

not found in 'packpath': "start/*/queries/lua/indents.scm"
not found in 'packpath': "start/*/queries/lua/injections.scm"
not found in 'runtimepath': "queries/comment/injections.scm"
not found in 'packpath': "pack/*/start/*/queries/comment/injections.scm"
not found in 'packpath': "start/*/queries/comment/injections.scm"
Executing FileType Autocommands for "*"
autocommand lua require'nvim-treesitter.configs'.reattach_module('incremental_selection')

autocommand lua require'nvim-treesitter.configs'.reattach_module('highlight')

not found in 'packpath': "start/*/queries/lua/highlights.scm"
Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

autocommand lua require'nvim-treesitter.configs'.reattach_module('indent')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_definitions')

not found in 'packpath': "start/*/queries/lua/locals.scm"
autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.navigation')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.smart_rename')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_current_scope')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.move')

not found in 'packpath': "start/*/queries/lua/textobjects.scm"
not found in 'packpath': "start/*/queries/lua/textobjects.scm"
autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.lsp_interop')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.select')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.swap')

autocommand lua require'nvim-treesitter.configs'.reattach_module('autotag')

autocommand lua require'nvim-treesitter.configs'.reattach_module('context_commentstring')

Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif

Executing BufReadPost Autocommands for "*"
autocommand call <SID>neomutt_log()

Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif

Executing BufReadPost Autocommands for "*"
autocommand if @% !~# '\.git[\/\\]COMMIT_EDITMSG$' && line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif 

Executing BufReadPost Autocommands for "*"
autocommand lua _G.package.loaded.gitsigns.attach(nil, 'BufRead')

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufWinEnter Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()


Executing InsertLeave Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing InsertLeave Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('InsertLeave')

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

not found in 'packpath': "start/*/queries/lua/locals.scm"
Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
not found in 'packpath': "start/*/queries/lua/highlights.scm"
not found in 'packpath': "start/*/queries/comment/highlights.scm"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
not found in 'packpath': "start/*/queries/lua/indents.scm"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'nvim-tree.diagnostics'.update()

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'trouble'.refresh({auto = true, provider = "diagnostics"})

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'nvim-tree.diagnostics'.update()

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'trouble'.refresh({auto = true, provider = "diagnostics"})

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)

Executing InsertEnter Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('InsertEnter')

Executing InsertEnter Autocommands for "*"
autocommand lua require'cmp_nvim_lsp'._on_insert_enter()

Executing InsertEnter Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing InsertEnter Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertEnter()
-- INSERT --
chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT --
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT --
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)


Executing InsertLeave Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing InsertLeave Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('InsertLeave')

Executing InsertLeave Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertLeave()

Executing InsertLeave Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'nvim-tree.diagnostics'.update()

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'trouble'.refresh({auto = true, provider = "diagnostics"})

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)

1 change; before #1  53 seconds ago
Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'nvim-tree.diagnostics'.update()

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'trouble'.refresh({auto = true, provider = "diagnostics"})

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-bufferline.lua/autoload)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-bufferline.lua/autoload/nvim_bufferline.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-bufferline.lua/autoload/nvim_bufferline.vim
Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing BufLeave Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.clear_highlights(19)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
"~/.config/nvim/nvim.log" [noeol] 8692L, 325024C
Reading undo file: /home/matt/.local/share/nvim/undo/%home%matt%.config%nvim%nvim.log
Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif

chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime)
chdir(/home/matt/.config/nvim)
line 0: sourcing "/usr/share/nvim/runtime/scripts.vim"
finished sourcing /usr/share/nvim/runtime/scripts.vim
continuing in BufReadPost Autocommands for "*"
not found in 'packpath': "pack/*/start/*/scripts.vim"
not found in 'packpath': "start/*/scripts.vim"
Executing BufReadPost Autocommands for "*"
autocommand call <SID>neomutt_log()

Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif

Executing BufReadPost Autocommands for "*"
autocommand if @% !~# '\.git[\/\\]COMMIT_EDITMSG$' && line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif 

Executing BufReadPost Autocommands for "*"
autocommand lua _G.package.loaded.gitsigns.attach(nil, 'BufRead')

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufWinEnter Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
"~/.config/nvim/nvim.log" 
"~/.config/nvim/nvim.log" [noeol] 8798L, 329120C
Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif

Executing BufReadPost Autocommands for "*"
autocommand call <SID>neomutt_log()

Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif

Executing BufReadPost Autocommands for "*"
autocommand if @% !~# '\.git[\/\\]COMMIT_EDITMSG$' && line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif 

Executing BufReadPost Autocommands for "*"
autocommand lua _G.package.loaded.gitsigns.attach(nil, 'BufRead')

Writing undo file: /home/matt/.local/share/nvim/undo/%home%matt%.config%nvim%nvim.log
Executing FileChangedShellPost Autocommands for "*"
autocommand IndentBlanklineRefresh

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
"./lua/plugins/gitsigns.lua" 81L, 3051C
Executing BufReadPost Autocommands for "*.lua"
autocommand setf lua

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/ftplugin)
chdir(/home/matt/.config/nvim)
line 17: sourcing "/usr/share/nvim/runtime/ftplugin/lua.vim"
finished sourcing /usr/share/nvim/runtime/ftplugin/lua.vim
continuing in function <SNR>14_LoadFTPlugin
not found in 'packpath': "pack/*/start/*/ftplugin/lua.vim ftplugin/lua_*.vim ftplugin/lua/*.vim"
not found in 'packpath': "start/*/ftplugin/lua.vim ftplugin/lua_*.vim ftplugin/lua/*.vim"
not found in 'runtimepath': "ftplugin/lua.lua ftplugin/lua_*.lua ftplugin/lua/*.lua"
not found in 'packpath': "pack/*/start/*/ftplugin/lua.lua ftplugin/lua_*.lua ftplugin/lua/*.lua"
not found in 'packpath': "start/*/ftplugin/lua.lua ftplugin/lua_*.lua ftplugin/lua/*.lua"
Executing FileType Autocommands for "*"
autocommand unsilent lua require("null-ls.lspconfig").try_add()

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/indent)
chdir(/home/matt/.config/nvim)
line 14: sourcing "/usr/share/nvim/runtime/indent/lua.vim"
finished sourcing /usr/share/nvim/runtime/indent/lua.vim
continuing in function <SNR>16_LoadIndent
not found in 'packpath': "pack/*/start/*/indent/lua.vim"
not found in 'packpath': "start/*/indent/lua.vim"
not found in 'runtimepath': "indent/lua.lua"
not found in 'packpath': "pack/*/start/*/indent/lua.lua"
not found in 'packpath': "start/*/indent/lua.lua"
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/syntax)
chdir(/home/matt/.config/nvim)
line 25: sourcing "/usr/share/nvim/runtime/syntax/lua.vim"
finished sourcing /usr/share/nvim/runtime/syntax/lua.vim
continuing in function <SNR>18_SynSet
not found in 'packpath': "pack/*/start/*/syntax/lua.vim syntax/lua/*.vim"
not found in 'packpath': "start/*/syntax/lua.vim syntax/lua/*.vim"
not found in 'runtimepath': "syntax/lua.lua syntax/lua/*.lua"
not found in 'packpath': "pack/*/start/*/syntax/lua.lua syntax/lua/*.lua"
not found in 'packpath': "start/*/syntax/lua.lua syntax/lua/*.lua"
Executing FileType Autocommands for "*"
autocommand IndentBlanklineRefresh

not found in 'packpath': "start/*/queries/lua/injections.scm"
not found in 'runtimepath': "queries/comment/injections.scm"
not found in 'packpath': "pack/*/start/*/queries/comment/injections.scm"
not found in 'packpath': "start/*/queries/comment/injections.scm"
Executing FileType Autocommands for "*"
autocommand lua require'nvim-treesitter.configs'.reattach_module('incremental_selection')

autocommand lua require'nvim-treesitter.configs'.reattach_module('highlight')

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

autocommand lua require'nvim-treesitter.configs'.reattach_module('indent')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_definitions')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.navigation')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.smart_rename')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_current_scope')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.move')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.lsp_interop')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.select')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.swap')

autocommand lua require'nvim-treesitter.configs'.reattach_module('autotag')

autocommand lua require'nvim-treesitter.configs'.reattach_module('context_commentstring')

Executing FileType Autocommands for "lua"
autocommand setlocal indentexpr=nvim_treesitter#indent()

autocommand setlocal indentexpr=nvim_treesitter#indent()

Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif

Executing BufReadPost Autocommands for "*"
autocommand call <SID>neomutt_log()

Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif

Executing BufReadPost Autocommands for "*"
autocommand if @% !~# '\.git[\/\\]COMMIT_EDITMSG$' && line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif 

Executing BufReadPost Autocommands for "*"
autocommand lua _G.package.loaded.gitsigns.attach(nil, 'BufRead')

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufWinEnter Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
not found in 'packpath': "start/*/queries/lua/highlights.scm"
not found in 'packpath': "start/*/queries/comment/highlights.scm"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'nvim-tree.diagnostics'.update()

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'trouble'.refresh({auto = true, provider = "diagnostics"})

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'nvim-tree.diagnostics'.update()

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'trouble'.refresh({auto = true, provider = "diagnostics"})

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)

Executing InsertEnter Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('InsertEnter')

Executing InsertEnter Autocommands for "*"
autocommand lua require'cmp_nvim_lsp'._on_insert_enter()

Executing InsertEnter Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing InsertEnter Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertEnter()
-- INSERT --
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT --
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)


chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/autoload)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/autoload/nvim_treesitter.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/autoload/nvim_treesitter.vim
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT --
chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)


Executing InsertLeave Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing InsertLeave Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('InsertLeave')

Executing InsertLeave Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'nvim-tree.diagnostics'.update()

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'trouble'.refresh({auto = true, provider = "diagnostics"})

Executing InsertLeave Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertLeave()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)

Executing InsertEnter Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('InsertEnter')

Executing InsertEnter Autocommands for "*"
autocommand lua require'cmp_nvim_lsp'._on_insert_enter()

Executing InsertEnter Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing InsertEnter Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertEnter()
-- INSERT --
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)


Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing InsertCharPre Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)


Executing InsertLeave Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing InsertLeave Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('InsertLeave')

Executing InsertLeave Autocommands for "<buffer=19>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(19, 1)

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'nvim-tree.diagnostics'.update()

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'trouble'.refresh({auto = true, provider = "diagnostics"})

Executing InsertLeave Autocommands for "<buffer=19>"
autocommand lua require'lsp_signature'.on_InsertLeave()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)


chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing BufWritePre Autocommands for "<buffer=19>"
autocommand lua vim.lsp.buf.formatting_sync(nil, 1000)

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
"./lua/plugins/gitsigns.lua" 
"./lua/plugins/gitsigns.lua" 83L, 3064C written
Writing undo file: /home/matt/.local/share/nvim/undo/%home%matt%.config%nvim%lua%plugins%gitsigns.lua
chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing BufWritePost Autocommands for "*"
autocommand lua require'nvim-tree'.refresh()

Executing BufWritePost Autocommands for "*"
autocommand call s:HandleActivity(s:true)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing BufWritePost Autocommands for "*"
autocommand lua _G.package.loaded.gitsigns.attach(nil, 'BufWritePost')

Executing BufWritePost Autocommands for "<buffer=19>"
autocommand lua vim.lsp._text_document_did_save_handler(0)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
"./lua/plugins/gitsigns.lua" 83L, 3064C written
Executing command: "'/usr/bin/zsh' '-c' 'git -C '/home/matt/.config/nvim' config --type=bool status.showUntrackedFiles'"


Executing command: "'/usr/bin/zsh' '-c' 'git -C '/home/matt/.config/nvim' status --porcelain=v1 --ignored=matching -u'"


chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'nvim-tree.diagnostics'.update()

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'trouble'.refresh({auto = true, provider = "diagnostics"})

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(19)

Executing CursorMoved Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(19)

chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=19>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(19)


chdir(/home/matt/.config/nvim)
chdir(./lua/plugins)
chdir(/home/matt/.config/nvim)
Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing VimLeavePre Autocommands for "*"
autocommand lua vim.lsp._vim_exit_handler()

Executing VimLeavePre Autocommands for "*"
autocommand lua require("project_nvim.utils.history").write_projects_to_history()

Executing VimLeavePre Autocommands for "*"
autocommand lua _G.package.loaded.gitsigns.detach_all()

Writing ShaDa file "/home/matt/.local/share/nvim/shada/main.shada"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/chezmoi)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/.git)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal/experiments/src/pages)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal/experiments/src/layouts)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal/ts-svg)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal/ts-svg)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal/ts-svg)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal/ts-svg)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins/lsp)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/keymaps)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins/lsp)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins/lsp)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg//nvim)
chdir(/home/matt/.config/nvim)
sourcing "/etc/xdg//nvim/sysinit.vim"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim)
chdir(/home/matt/.config/nvim)
line 2: sourcing "/usr/share/nvim/archlinux.vim"
finished sourcing /usr/share/nvim/archlinux.vim
continuing in /etc/xdg/nvim/sysinit.vim
finished sourcing /etc/xdg//nvim/sysinit.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.config/nvim/init.lua"
not found in 'runtimepath': "lua/settings.lua"
not found in 'packpath': "pack/*/start/*/lua/settings.lua"
not found in 'packpath': "start/*/lua/settings.lua"
not found in 'runtimepath': "lua/keymaps.lua"
not found in 'packpath': "pack/*/start/*/lua/keymaps.lua"
not found in 'packpath': "start/*/lua/keymaps.lua"
not found in 'runtimepath': "lua/which-key.lua"
not found in 'packpath': "pack/*/start/*/lua/which-key.lua"
not found in 'packpath': "start/*/lua/which-key.lua"
not found in 'runtimepath': "lua/which-key/init.lua"
not found in 'runtimepath': "lua/which-key/keys.lua"
not found in 'runtimepath': "lua/which-key/tree.lua"
not found in 'runtimepath': "lua/which-key/util.lua"
not found in 'runtimepath': "lua/which-key/config.lua"
not found in 'runtimepath': "lua/plugins/telescope.lua"
not found in 'packpath': "pack/*/start/*/lua/plugins/telescope.lua"
not found in 'packpath': "start/*/lua/plugins/telescope.lua"
not found in 'runtimepath': "lua/notify.lua"
not found in 'packpath': "pack/*/start/*/lua/notify.lua"
not found in 'packpath': "start/*/lua/notify.lua"
not found in 'runtimepath': "lua/notify/init.lua"
not found in 'runtimepath': "lua/notify/util.lua"
not found in 'packpath': "pack/*/start/*/lua/notify/util.lua"
not found in 'packpath': "start/*/lua/notify/util.lua"
not found in 'runtimepath': "lua/notify/util/init.lua"
not found in 'runtimepath': "lua/notify/util/queue.lua"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime)
chdir(/home/matt/.config/nvim)
line 0: sourcing "/usr/share/nvim/runtime/filetype.vim"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/usr/share/vim/vimfiles/ftdetect/PKGBUILD.vim"
finished sourcing /usr/share/vim/vimfiles/ftdetect/PKGBUILD.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/usr/share/vim/vimfiles/ftdetect/conkyrc.vim"
finished sourcing /usr/share/vim/vimfiles/ftdetect/conkyrc.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/usr/share/vim/vimfiles/ftdetect/logfile.vim"
finished sourcing /usr/share/vim/vimfiles/ftdetect/logfile.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/usr/share/vim/vimfiles/ftdetect/mail.vim"
finished sourcing /usr/share/vim/vimfiles/ftdetect/mail.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/usr/share/vim/vimfiles/ftdetect/neomuttrc.vim"
finished sourcing /usr/share/vim/vimfiles/ftdetect/neomuttrc.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/usr/share/vim/vimfiles/ftdetect/task.vim"
finished sourcing /usr/share/vim/vimfiles/ftdetect/task.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gdscript.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gdscript.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gomod.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gomod.vim
continuing in /usr/share/nvim/runtime/filetype.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect)
chdir(/home/matt/.config/nvim)
line 2318: sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/query.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/query.vim
continuing in /usr/share/nvim/runtime/filetype.vim
not found in 'packpath': "start/*/ftdetect/*.vim"
not found in 'runtimepath': "ftdetect/*.lua"
not found in 'packpath': "pack/*/start/*/ftdetect/*.lua"
not found in 'packpath': "start/*/ftdetect/*.lua"
finished sourcing /usr/share/nvim/runtime/filetype.vim
continuing in nvim_exec() called at /home/matt/.config/nvim/init.lua:0
not found in 'packpath': "pack/*/start/*/filetype.vim"
not found in 'packpath': "start/*/filetype.vim"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime)
chdir(/home/matt/.config/nvim)
line 0: sourcing "/usr/share/nvim/runtime/ftplugin.vim"
finished sourcing /usr/share/nvim/runtime/ftplugin.vim
continuing in nvim_exec() called at /home/matt/.config/nvim/init.lua:0
not found in 'packpath': "pack/*/start/*/ftplugin.vim"
not found in 'packpath': "start/*/ftplugin.vim"
not found in 'runtimepath': "lua/plugins.lua"
not found in 'packpath': "pack/*/start/*/lua/plugins.lua"
not found in 'packpath': "start/*/lua/plugins.lua"
not found in 'runtimepath': "lua/packer.lua"
not found in 'runtimepath': "lua/packer/util.lua"
not found in 'runtimepath': "lua/packer/plugin_utils.lua"
not found in 'runtimepath': "lua/packer/async.lua"
not found in 'runtimepath': "lua/packer/log.lua"
not found in 'runtimepath': "lua/packer/jobs.lua"
not found in 'runtimepath': "lua/packer/result.lua"
not found in 'runtimepath': "lua/plugins/utils.lua"
not found in 'packpath': "pack/*/start/*/lua/plugins/utils.lua"
not found in 'packpath': "start/*/lua/plugins/utils.lua"
not found in 'runtimepath': "lua/plugins/lsp.lua"
not found in 'packpath': "pack/*/start/*/lua/plugins/lsp.lua"
not found in 'packpath': "start/*/lua/plugins/lsp.lua"
not found in 'runtimepath': "lua/lspconfig.lua"
not found in 'runtimepath': "lua/lspconfig/configs.lua"
not found in 'runtimepath': "lua/lspconfig/util.lua"
not found in 'runtimepath': "lua/lua-dev.lua"
not found in 'packpath': "pack/*/start/*/lua/lua-dev.lua"
not found in 'packpath': "start/*/lua/lua-dev.lua"
not found in 'runtimepath': "lua/lua-dev/init.lua"
not found in 'runtimepath': "lua/lua-dev/config.lua"
not found in 'runtimepath': "lua/workspace.lua"
not found in 'packpath': "pack/*/start/*/lua/workspace.lua"
not found in 'packpath': "start/*/lua/workspace.lua"
not found in 'runtimepath': "lua/workspace/init.lua"
not found in 'packpath': "pack/*/start/*/lua/workspace/init.lua"
not found in 'packpath': "start/*/lua/workspace/init.lua"
not found in 'runtimepath': "lua/workspace.so"
not found in 'packpath': "pack/*/start/*/lua/workspace.so"
not found in 'packpath': "start/*/lua/workspace.so"
not found in 'runtimepath': "lua/lua-dev/sumneko.lua"
not found in 'runtimepath': "lua/lspsaga.lua"
not found in 'packpath': "pack/*/start/*/lua/lspsaga.lua"
not found in 'packpath': "start/*/lua/lspsaga.lua"
not found in 'runtimepath': "lua/lspsaga/init.lua"
not found in 'runtimepath': "lua/lspsaga/diagnostic.lua"
not found in 'runtimepath': "lua/lspsaga/window.lua"
not found in 'runtimepath': "lua/lspsaga/wrap.lua"
not found in 'runtimepath': "lua/lspsaga/libs.lua"
not found in 'runtimepath': "lua/lspsaga/hover.lua"
not found in 'runtimepath': "lua/lspsaga/action.lua"
not found in 'runtimepath': "lua/lspinstall.lua"
not found in 'runtimepath': "lua/lspinstall/servers.lua"
not found in 'runtimepath': "lua/lspinstall/servers/angular.lua"
not found in 'runtimepath': "lua/lspinstall/util.lua"
not found in 'runtimepath': "lua/lspinstall/servers/bash.lua"
not found in 'runtimepath': "lua/lspinstall/servers/clojure.lua"
not found in 'runtimepath': "lua/lspinstall/servers/cmake.lua"
not found in 'runtimepath': "lua/lspinstall/servers/cpp.lua"
not found in 'runtimepath': "lua/lspinstall/servers/csharp.lua"
not found in 'runtimepath': "lua/lspinstall/servers/css.lua"
not found in 'runtimepath': "lua/lspinstall/servers/deno.lua"
not found in 'runtimepath': "lua/lspinstall/servers/diagnosticls.lua"
not found in 'runtimepath': "lua/lspinstall/servers/dockerfile.lua"
not found in 'runtimepath': "lua/lspinstall/servers/efm.lua"
not found in 'runtimepath': "lua/lspinstall/servers/elixir.lua"
not found in 'runtimepath': "lua/lspinstall/servers/elm.lua"
not found in 'runtimepath': "lua/lspinstall/servers/ember.lua"
not found in 'runtimepath': "lua/lspinstall/servers/fortran.lua"
not found in 'runtimepath': "lua/lspinstall/servers/go.lua"
not found in 'runtimepath': "lua/lspinstall/servers/graphql.lua"
not found in 'runtimepath': "lua/lspinstall/servers/haskell.lua"
not found in 'runtimepath': "lua/lspinstall/servers/html.lua"
not found in 'runtimepath': "lua/lspinstall/servers/java.lua"
not found in 'runtimepath': "lua/lspinstall/servers/json.lua"
not found in 'runtimepath': "lua/lspinstall/servers/kotlin.lua"
not found in 'runtimepath': "lua/lspinstall/servers/latex.lua"
not found in 'runtimepath': "lua/lspinstall/servers/lua.lua"
not found in 'runtimepath': "lua/lspinstall/servers/php.lua"
not found in 'runtimepath': "lua/lspinstall/servers/puppet.lua"
not found in 'runtimepath': "lua/lspinstall/servers/purescript.lua"
not found in 'runtimepath': "lua/lspinstall/servers/python.lua"
not found in 'runtimepath': "lua/lspinstall/servers/rome.lua"
not found in 'runtimepath': "lua/lspinstall/servers/ruby.lua"
not found in 'runtimepath': "lua/lspinstall/servers/rust.lua"
not found in 'runtimepath': "lua/lspinstall/servers/svelte.lua"
not found in 'runtimepath': "lua/lspinstall/servers/tailwindcss.lua"
not found in 'runtimepath': "lua/lspinstall/servers/terraform.lua"
not found in 'runtimepath': "lua/lspinstall/servers/typescript.lua"
not found in 'runtimepath': "lua/lspinstall/servers/vim.lua"
not found in 'runtimepath': "lua/lspinstall/servers/vue.lua"
not found in 'runtimepath': "lua/lspinstall/servers/yaml.lua"
not found in 'runtimepath': "lua/null-ls.lua"
not found in 'packpath': "pack/*/start/*/lua/null-ls.lua"
not found in 'packpath': "start/*/lua/null-ls.lua"
not found in 'runtimepath': "lua/null-ls/init.lua"
not found in 'runtimepath': "lua/null-ls/helpers.lua"
not found in 'runtimepath': "lua/null-ls/utils.lua"
not found in 'runtimepath': "lua/null-ls/config.lua"
not found in 'runtimepath': "lua/null-ls/methods.lua"
not found in 'runtimepath': "lua/null-ls/state.lua"
not found in 'runtimepath': "lua/null-ls/builtins.lua"
not found in 'packpath': "pack/*/start/*/lua/null-ls/builtins.lua"
not found in 'packpath': "start/*/lua/null-ls/builtins.lua"
not found in 'runtimepath': "lua/null-ls/builtins/init.lua"
not found in 'runtimepath': "lua/null-ls/info.lua"
not found in 'runtimepath': "lua/null-ls/builtins/diagnostics.lua"
not found in 'runtimepath': "lua/null-ls/builtins/formatting.lua"
not found in 'runtimepath': "lua/null-ls/lspconfig.lua"
not found in 'runtimepath': "lua/null-ls/rpc.lua"
not found in 'runtimepath': "lua/null-ls/handlers.lua"
not found in 'runtimepath': "lua/luasnip.lua"
not found in 'packpath': "pack/*/start/*/lua/luasnip.lua"
not found in 'packpath': "start/*/lua/luasnip.lua"
not found in 'runtimepath': "lua/luasnip/init.lua"
not found in 'runtimepath': "lua/luasnip/nodes/snippet.lua"
not found in 'runtimepath': "lua/luasnip/nodes/node.lua"
not found in 'runtimepath': "lua/luasnip/session.lua"
not found in 'runtimepath': "lua/luasnip/util/util.lua"
not found in 'runtimepath': "lua/luasnip/util/events.lua"
not found in 'runtimepath': "lua/luasnip/util/types.lua"
not found in 'runtimepath': "lua/luasnip/nodes/insertNode.lua"
not found in 'runtimepath': "lua/luasnip/config.lua"
not found in 'runtimepath': "lua/luasnip/nodes/textNode.lua"
not found in 'runtimepath': "lua/luasnip/util/mark.lua"
not found in 'runtimepath': "lua/luasnip/util/environ.lua"
not found in 'runtimepath': "lua/luasnip/util/pattern_tokenizer.lua"
not found in 'runtimepath': "lua/luasnip/nodes/functionNode.lua"
not found in 'runtimepath': "lua/luasnip/nodes/choiceNode.lua"
not found in 'runtimepath': "lua/luasnip/nodes/dynamicNode.lua"
not found in 'runtimepath': "lua/luasnip/util/parser.lua"
not found in 'runtimepath': "lua/luasnip/util/functions.lua"
not found in 'runtimepath': "lua/cmp.lua"
not found in 'packpath': "pack/*/start/*/lua/cmp.lua"
not found in 'packpath': "start/*/lua/cmp.lua"
not found in 'runtimepath': "lua/cmp/init.lua"
not found in 'runtimepath': "lua/cmp/core.lua"
not found in 'runtimepath': "lua/cmp/utils/debug.lua"
not found in 'runtimepath': "lua/cmp/utils/char.lua"
not found in 'runtimepath': "lua/cmp/utils/str.lua"
not found in 'runtimepath': "lua/cmp/utils/pattern.lua"
not found in 'runtimepath': "lua/cmp/utils/async.lua"
not found in 'runtimepath': "lua/cmp/utils/keymap.lua"
not found in 'runtimepath': "lua/cmp/utils/misc.lua"
not found in 'runtimepath': "lua/cmp/utils/cache.lua"
not found in 'runtimepath': "lua/cmp/context.lua"
not found in 'runtimepath': "lua/cmp/types.lua"
not found in 'packpath': "pack/*/start/*/lua/cmp/types.lua"
not found in 'packpath': "start/*/lua/cmp/types.lua"
not found in 'runtimepath': "lua/cmp/types/init.lua"
not found in 'runtimepath': "lua/cmp/types/cmp.lua"
not found in 'runtimepath': "lua/cmp/types/lsp.lua"
not found in 'runtimepath': "lua/cmp/types/vim.lua"
not found in 'runtimepath': "lua/cmp/source.lua"
not found in 'runtimepath': "lua/cmp/config.lua"
not found in 'runtimepath': "lua/cmp/config/default.lua"
not found in 'runtimepath': "lua/cmp/config/compare.lua"
not found in 'runtimepath': "lua/cmp/matcher.lua"
not found in 'runtimepath': "lua/cmp/entry.lua"
not found in 'runtimepath': "lua/cmp/menu.lua"
not found in 'runtimepath': "lua/cmp/float.lua"
not found in 'runtimepath': "lua/cmp/utils/autocmd.lua"
not found in 'runtimepath': "lua/cmp/config/mapping.lua"
not found in 'runtimepath': "lua/lspkind.lua"
not found in 'packpath': "pack/*/start/*/lua/lspkind.lua"
not found in 'packpath': "start/*/lua/lspkind.lua"
not found in 'runtimepath': "lua/lspkind/init.lua"
not found in 'runtimepath': "lua/cmp_nvim_lsp.lua"
not found in 'packpath': "pack/*/start/*/lua/cmp_nvim_lsp.lua"
not found in 'packpath': "start/*/lua/cmp_nvim_lsp.lua"
not found in 'runtimepath': "lua/cmp_nvim_lsp/init.lua"
not found in 'runtimepath': "lua/cmp_nvim_lsp/source.lua"
not found in 'runtimepath': "lua/trouble.lua"
not found in 'packpath': "pack/*/start/*/lua/trouble.lua"
not found in 'packpath': "start/*/lua/trouble.lua"
not found in 'runtimepath': "lua/trouble/init.lua"
not found in 'runtimepath': "lua/trouble/view.lua"
not found in 'runtimepath': "lua/trouble/renderer.lua"
not found in 'runtimepath': "lua/trouble/providers.lua"
not found in 'packpath': "pack/*/start/*/lua/trouble/providers.lua"
not found in 'packpath': "start/*/lua/trouble/providers.lua"
not found in 'runtimepath': "lua/trouble/providers/init.lua"
not found in 'runtimepath': "lua/trouble/util.lua"
not found in 'runtimepath': "lua/trouble/config.lua"
not found in 'runtimepath': "lua/trouble/providers/qf.lua"
not found in 'runtimepath': "lua/trouble/providers/telescope.lua"
not found in 'runtimepath': "lua/trouble/providers/lsp.lua"
not found in 'runtimepath': "lua/trouble/text.lua"
not found in 'runtimepath': "lua/trouble/folds.lua"
not found in 'runtimepath': "lua/trouble/colors.lua"
not found in 'runtimepath': "lua/telescope.lua"
not found in 'packpath': "pack/*/start/*/lua/telescope.lua"
not found in 'packpath': "start/*/lua/telescope.lua"
not found in 'runtimepath': "lua/telescope/init.lua"
not found in 'runtimepath': "lua/telescope/_extensions.lua"
not found in 'packpath': "pack/*/start/*/lua/telescope/_extensions.lua"
not found in 'packpath': "start/*/lua/telescope/_extensions.lua"
not found in 'runtimepath': "lua/telescope/_extensions/init.lua"
not found in 'runtimepath': "lua/telescope/sorters.lua"
not found in 'runtimepath': "lua/telescope/log.lua"
not found in 'runtimepath': "lua/plenary/log.lua"
not found in 'runtimepath': "lua/telescope/utils.lua"
not found in 'runtimepath': "lua/plenary/path.lua"
not found in 'runtimepath': "lua/plenary/bit.lua"
not found in 'runtimepath': "lua/plenary/functional.lua"
not found in 'runtimepath': "lua/ffi.lua"
not found in 'packpath': "pack/*/start/*/lua/ffi.lua"
not found in 'packpath': "start/*/lua/ffi.lua"
not found in 'runtimepath': "lua/ffi/init.lua"
not found in 'packpath': "pack/*/start/*/lua/ffi/init.lua"
not found in 'packpath': "start/*/lua/ffi/init.lua"
not found in 'runtimepath': "lua/ffi.so"
not found in 'packpath': "pack/*/start/*/lua/ffi.so"
not found in 'packpath': "start/*/lua/ffi.so"
not found in 'runtimepath': "lua/plenary/job.lua"
not found in 'runtimepath': "lua/telescope/previewers.lua"
not found in 'packpath': "pack/*/start/*/lua/telescope/previewers.lua"
not found in 'packpath': "start/*/lua/telescope/previewers.lua"
not found in 'runtimepath': "lua/telescope/previewers/init.lua"
not found in 'runtimepath': "lua/telescope/previewers/previewer.lua"
not found in 'runtimepath': "lua/telescope/previewers/term_previewer.lua"
not found in 'runtimepath': "lua/telescope/config.lua"
not found in 'runtimepath': "lua/plenary/strings.lua"
not found in 'runtimepath': "lua/telescope/deprecated.lua"
not found in 'runtimepath': "lua/telescope/previewers/utils.lua"
not found in 'runtimepath': "lua/plenary/context_manager.lua"
not found in 'runtimepath': "lua/nvim-treesitter.lua"
not found in 'runtimepath': "lua/nvim-treesitter/install.lua"
not found in 'runtimepath': "lua/nvim-treesitter/utils.lua"
not found in 'runtimepath': "lua/nvim-treesitter/parsers.lua"
not found in 'runtimepath': "lua/nvim-treesitter/info.lua"
not found in 'runtimepath': "lua/nvim-treesitter/configs.lua"
not found in 'runtimepath': "lua/nvim-treesitter/query.lua"
not found in 'runtimepath': "lua/nvim-treesitter/tsrange.lua"
not found in 'runtimepath': "lua/nvim-treesitter/ts_utils.lua"
not found in 'runtimepath': "lua/nvim-treesitter/caching.lua"
not found in 'runtimepath': "lua/nvim-treesitter/shell_command_selectors.lua"
not found in 'runtimepath': "lua/nvim-treesitter/query_predicates.lua"
not found in 'runtimepath': "lua/telescope/from_entry.lua"
not found in 'runtimepath': "lua/telescope/previewers/buffer_previewer.lua"
not found in 'runtimepath': "lua/plenary/filetype.lua"
not found in 'runtimepath': "data/plenary/filetypes/base.lua"
not found in 'packpath': "start/*/data/plenary/filetypes/base.lua"
not found in 'runtimepath': "data/plenary/filetypes/builtin.lua"
not found in 'packpath': "start/*/data/plenary/filetypes/builtin.lua"
not found in 'runtimepath': "lua/plenary/scandir.lua"
not found in 'runtimepath': "lua/telescope/actions.lua"
not found in 'packpath': "pack/*/start/*/lua/telescope/actions.lua"
not found in 'packpath': "start/*/lua/telescope/actions.lua"
not found in 'runtimepath': "lua/telescope/actions/init.lua"
not found in 'runtimepath': "lua/telescope/state.lua"
not found in 'runtimepath': "lua/plenary/popup.lua"
not found in 'packpath': "pack/*/start/*/lua/plenary/popup.lua"
not found in 'packpath': "start/*/lua/plenary/popup.lua"
not found in 'runtimepath': "lua/plenary/popup/init.lua"
not found in 'runtimepath': "lua/plenary/window/border.lua"
not found in 'runtimepath': "lua/plenary/tbl.lua"
not found in 'runtimepath': "lua/plenary/window.lua"
not found in 'packpath': "pack/*/start/*/lua/plenary/window.lua"
not found in 'packpath': "start/*/lua/plenary/window.lua"
not found in 'runtimepath': "lua/plenary/window/init.lua"
not found in 'runtimepath': "lua/plenary/popup/utils.lua"
not found in 'runtimepath': "lua/telescope/pickers/scroller.lua"
not found in 'runtimepath': "lua/telescope/actions/state.lua"
not found in 'runtimepath': "lua/telescope/actions/utils.lua"
not found in 'runtimepath': "lua/telescope/actions/set.lua"
not found in 'runtimepath': "lua/telescope/actions/mt.lua"
not found in 'runtimepath': "lua/telescope/pickers/entry_display.lua"
not found in 'runtimepath': "lua/telescope/config/resolve.lua"
not found in 'runtimepath': "lua/telescope/_extensions/fzf.lua"
not found in 'runtimepath': "lua/fzf_lib.lua"
not found in 'runtimepath': "lua/telescope/_extensions/projects.lua"
not found in 'runtimepath': "lua/telescope/finders.lua"
not found in 'runtimepath': "lua/telescope/make_entry.lua"
not found in 'runtimepath': "lua/telescope/finders/async_static_finder.lua"
not found in 'runtimepath': "lua/plenary/async.lua"
not found in 'packpath': "pack/*/start/*/lua/plenary/async.lua"
not found in 'packpath': "start/*/lua/plenary/async.lua"
not found in 'runtimepath': "lua/plenary/async/init.lua"
not found in 'runtimepath': "lua/plenary/async/async.lua"
not found in 'runtimepath': "lua/plenary/vararg.lua"
not found in 'packpath': "pack/*/start/*/lua/plenary/vararg.lua"
not found in 'packpath': "start/*/lua/plenary/vararg.lua"
not found in 'runtimepath': "lua/plenary/vararg/init.lua"
not found in 'runtimepath': "lua/plenary/vararg/rotate.lua"
not found in 'runtimepath': "lua/plenary/errors.lua"
not found in 'runtimepath': "lua/plenary/async/tests.lua"
not found in 'runtimepath': "lua/plenary/async/util.lua"
not found in 'runtimepath': "lua/plenary/async/control.lua"
not found in 'runtimepath': "lua/plenary/async/structs.lua"
not found in 'runtimepath': "lua/telescope/finders/async_oneshot_finder.lua"
not found in 'runtimepath': "lua/telescope/_.lua"
not found in 'runtimepath': "lua/plenary/class.lua"
not found in 'runtimepath': "lua/telescope/finders/async_job_finder.lua"
not found in 'runtimepath': "lua/telescope/pickers.lua"
not found in 'runtimepath': "lua/telescope/debounce.lua"
not found in 'runtimepath': "lua/telescope/mappings.lua"
not found in 'runtimepath': "lua/telescope/pickers/highlights.lua"
not found in 'runtimepath': "lua/telescope/pickers/window.lua"
not found in 'runtimepath': "lua/telescope/entry_manager.lua"
not found in 'runtimepath': "lua/telescope/algos/linked_list.lua"
not found in 'runtimepath': "lua/telescope/pickers/multi.lua"
not found in 'runtimepath': "lua/telescope/builtin.lua"
not found in 'packpath': "pack/*/start/*/lua/telescope/builtin.lua"
not found in 'packpath': "start/*/lua/telescope/builtin.lua"
not found in 'runtimepath': "lua/telescope/builtin/init.lua"
not found in 'runtimepath': "lua/telescope/builtin/lsp.lua"
not found in 'runtimepath': "lua/project_nvim/utils/history.lua"
not found in 'runtimepath': "lua/project_nvim/utils/path.lua"
not found in 'runtimepath': "lua/project_nvim/config.lua"
not found in 'runtimepath': "lua/project_nvim/project.lua"
not found in 'runtimepath': "lua/project_nvim/utils/globtopattern.lua"
not found in 'runtimepath': "lua/telescope/_extensions/zoxide.lua"
not found in 'runtimepath': "lua/telescope/_extensions/zoxide/list.lua"
not found in 'runtimepath': "parser/c_sharp.so"
not found in 'runtimepath': "parser/bibtex.so"
not found in 'runtimepath': "parser/python.so"
not found in 'runtimepath': "parser/r.so"
not found in 'runtimepath': "parser/comment.so"
not found in 'runtimepath': "parser/lua.so"
not found in 'runtimepath': "parser/ocaml.so"
not found in 'runtimepath': "parser/go.so"
not found in 'runtimepath': "parser/ql.so"
not found in 'runtimepath': "parser/json.so"
not found in 'runtimepath': "parser/jsdoc.so"
not found in 'runtimepath': "parser/ledger.so"
not found in 'runtimepath': "parser/php.so"
not found in 'runtimepath': "parser/clojure.so"
not found in 'runtimepath': "parser/supercollider.so"
not found in 'runtimepath': "parser/typescript.so"
not found in 'runtimepath': "parser/fennel.so"
not found in 'runtimepath': "parser/query.so"
not found in 'runtimepath': "parser/cpp.so"
not found in 'runtimepath': "parser/vue.so"
not found in 'runtimepath': "parser/latex.so"
not found in 'runtimepath': "parser/rst.so"
not found in 'runtimepath': "parser/css.so"
not found in 'runtimepath': "parser/glimmer.so"
not found in 'runtimepath': "parser/erlang.so"
not found in 'runtimepath': "parser/regex.so"
not found in 'runtimepath': "parser/svelte.so"
not found in 'runtimepath': "parser/c.so"
not found in 'runtimepath': "parser/teal.so"
not found in 'runtimepath': "parser/java.so"
not found in 'runtimepath': "parser/gomod.so"
not found in 'runtimepath': "parser/dart.so"
not found in 'runtimepath': "parser/verilog.so"
not found in 'runtimepath': "parser/bash.so"
not found in 'runtimepath': "parser/yaml.so"
not found in 'runtimepath': "parser/julia.so"
not found in 'runtimepath': "parser/turtle.so"
not found in 'runtimepath': "parser/html.so"
not found in 'runtimepath': "parser/cmake.so"
not found in 'runtimepath': "parser/zig.so"
not found in 'runtimepath': "parser/tsx.so"
not found in 'runtimepath': "parser/commonlisp.so"
not found in 'runtimepath': "parser/ocaml_interface.so"
not found in 'runtimepath': "parser/beancount.so"
not found in 'runtimepath': "parser/elixir.so"
not found in 'runtimepath': "parser/cuda.so"
not found in 'runtimepath': "parser/ocamllex.so"
not found in 'runtimepath': "parser/kotlin.so"
not found in 'runtimepath': "parser/ruby.so"
not found in 'runtimepath': "parser/fish.so"
not found in 'runtimepath': "parser/devicetree.so"
not found in 'runtimepath': "parser/dockerfile.so"
not found in 'runtimepath': "parser/rust.so"
not found in 'runtimepath': "parser/toml.so"
not found in 'runtimepath': "parser/scss.so"
not found in 'runtimepath': "parser/javascript.so"
not found in 'runtimepath': "parser/jsonc.so"
not found in 'runtimepath': "parser/nix.so"
not found in 'runtimepath': "parser/graphql.so"
not found in 'runtimepath': "parser/gdscript.so"
not found in 'runtimepath': "parser/sparql.so"
not found in 'runtimepath': "parser/hcl.so"
not found in 'runtimepath': "lua/gitsigns.lua"
not found in 'runtimepath': "lua/gitsigns/status.lua"
not found in 'runtimepath': "lua/gitsigns/git.lua"
not found in 'runtimepath': "lua/gitsigns/debug.lua"
not found in 'runtimepath': "lua/gitsigns/util.lua"
not found in 'runtimepath': "lua/gitsigns/subprocess.lua"
not found in 'runtimepath': "lua/gitsigns/hunks.lua"
not found in 'runtimepath': "lua/gitsigns/signs.lua"
not found in 'runtimepath': "lua/gitsigns/config.lua"
not found in 'runtimepath': "lua/gitsigns/manager.lua"
not found in 'runtimepath': "lua/gitsigns/cache.lua"
not found in 'runtimepath': "lua/gitsigns/debounce.lua"
not found in 'runtimepath': "lua/gitsigns/highlight.lua"
not found in 'runtimepath': "lua/indent_blankline.lua"
not found in 'packpath': "pack/*/start/*/lua/indent_blankline.lua"
not found in 'packpath': "start/*/lua/indent_blankline.lua"
not found in 'runtimepath': "lua/indent_blankline/init.lua"
not found in 'runtimepath': "lua/indent_blankline/utils.lua"
not found in 'runtimepath': "lua/bufferline.lua"
not found in 'runtimepath': "lua/bufferline/constants.lua"
not found in 'runtimepath': "lua/bufferline/utils.lua"
not found in 'runtimepath': "lua/bufferline/config.lua"
not found in 'runtimepath': "lua/lualine.lua"
not found in 'packpath': "pack/*/start/*/lua/lualine.lua"
not found in 'packpath': "start/*/lua/lualine.lua"
not found in 'runtimepath': "lua/lualine/init.lua"
not found in 'runtimepath': "lua/lualine/highlight.lua"
not found in 'runtimepath': "lua/lualine/utils/utils.lua"
not found in 'runtimepath': "lua/lualine/utils/loader.lua"
not found in 'runtimepath': "lua/lualine/utils/section.lua"
not found in 'runtimepath': "lua/lualine/config.lua"
not found in 'runtimepath': "lua/lualine/extensions/nvim-tree.lua"
not found in 'runtimepath': "lua/lualine/extensions/nerdtree.lua"
not found in 'runtimepath': "lua/colorizer.lua"
not found in 'runtimepath': "lua/colorizer/nvim.lua"
not found in 'runtimepath': "lua/colorizer/trie.lua"
not found in 'runtimepath': "lua/shade.lua"
not found in 'runtimepath': "lua/focus.lua"
not found in 'packpath': "pack/*/start/*/lua/focus.lua"
not found in 'packpath': "start/*/lua/focus.lua"
not found in 'runtimepath': "lua/focus/init.lua"
not found in 'runtimepath': "lua/focus/modules/config.lua"
not found in 'runtimepath': "lua/focus/modules/commands.lua"
not found in 'runtimepath': "lua/focus/modules/autocmd.lua"
not found in 'runtimepath': "lua/focus/modules/resizer.lua"
not found in 'runtimepath': "lua/focus/modules/utils.lua"
not found in 'runtimepath': "lua/focus/modules/split.lua"
not found in 'runtimepath': "lua/focus/modules/functions.lua"
not found in 'runtimepath': "lua/plugins/alpha.lua"
not found in 'packpath': "pack/*/start/*/lua/plugins/alpha.lua"
not found in 'packpath': "start/*/lua/plugins/alpha.lua"
not found in 'runtimepath': "lua/alpha.lua"
not found in 'runtimepath': "lua/alpha/themes/dashboard.lua"
not found in 'runtimepath': "lua/package-info.lua"
not found in 'packpath': "pack/*/start/*/lua/package-info.lua"
not found in 'packpath': "start/*/lua/package-info.lua"
not found in 'runtimepath': "lua/package-info/init.lua"
not found in 'runtimepath': "lua/package-info/config.lua"
not found in 'runtimepath': "lua/package-info/constants.lua"
not found in 'runtimepath': "lua/package-info/utils.lua"
not found in 'runtimepath': "lua/package-info/libs/json_parser.lua"
not found in 'runtimepath': "lua/package-info/logger.lua"
not found in 'runtimepath': "lua/package-info/modules/core.lua"
not found in 'runtimepath': "lua/nui/menu.lua"
not found in 'packpath': "pack/*/start/*/lua/nui/menu.lua"
not found in 'packpath': "start/*/lua/nui/menu.lua"
not found in 'runtimepath': "lua/nui/menu/init.lua"
not found in 'packpath': "pack/*/start/*/lua/nui/menu/init.lua"
not found in 'packpath': "start/*/lua/nui/menu/init.lua"
not found in 'runtimepath': "lua/nui/menu.so"
not found in 'packpath': "pack/*/start/*/lua/nui/menu.so"
not found in 'packpath': "start/*/lua/nui/menu.so"
not found in 'runtimepath': "lua/project_nvim.lua"
not found in 'packpath': "pack/*/start/*/lua/project_nvim.lua"
not found in 'packpath': "start/*/lua/project_nvim.lua"
not found in 'runtimepath': "lua/project_nvim/init.lua"
not found in 'runtimepath': "lua/tokyonight.lua"
not found in 'packpath': "pack/*/start/*/lua/tokyonight.lua"
not found in 'packpath': "start/*/lua/tokyonight.lua"
not found in 'runtimepath': "lua/tokyonight/init.lua"
not found in 'runtimepath': "lua/tokyonight/util.lua"
not found in 'runtimepath': "lua/tokyonight/hsluv.lua"
not found in 'runtimepath': "lua/tokyonight/theme.lua"
not found in 'runtimepath': "lua/tokyonight/colors.lua"
not found in 'runtimepath': "colors/tokyonight.vim"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim/colors)
chdir(/home/matt/.config/nvim)
line 0: sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim/colors/tokyonight.vim"
not found in 'runtimepath': "lua/tokyonight/config.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim/colors/tokyonight.vim
continuing in nvim_exec() called at /home/matt/.config/nvim/init.lua:0
Executing ColorScheme Autocommands for "*"
autocommand lua require("tokyonight.util").onColorScheme()

not found in 'runtimepath': "lua/packer/luarocks.lua"
not found in 'runtimepath': "lua/packer/clean.lua"
not found in 'runtimepath': "lua/packer/display.lua"
not found in 'runtimepath': "lua/packer/install.lua"
not found in 'runtimepath': "lua/packer/update.lua"
not found in 'runtimepath': "lua/packer/compile.lua"
not found in 'runtimepath': "lua/packer/plugin_types.lua"
not found in 'runtimepath': "lua/packer/handlers.lua"
not found in 'runtimepath': "lua/packer/plugin_types/git.lua"
finished sourcing /home/matt/.config/nvim/init.lua
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/indent.vim"
finished sourcing /usr/share/nvim/runtime/indent.vim
not found in 'packpath': "pack/*/start/*/indent.vim"
not found in 'packpath': "start/*/indent.vim"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/syntax)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/syntax/syntax.vim"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/syntax)
chdir(/home/matt/.config/nvim)
line 19: sourcing "/usr/share/nvim/runtime/syntax/synload.vim"
not found in 'runtimepath': "colors/tokyonight.vim"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim/colors)
chdir(/home/matt/.config/nvim)
line 19: sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim/colors/tokyonight.vim"
not found in 'runtimepath': "lua/tokyonight/config.lua"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/syntax)
chdir(/home/matt/.config/nvim)
line 0: sourcing "/usr/share/nvim/runtime/syntax/syncolor.vim"
finished sourcing /usr/share/nvim/runtime/syntax/syncolor.vim
continuing in nvim_exec() called at /home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim/colors/tokyonight.vim:9
not found in 'packpath': "pack/*/start/*/syntax/syncolor.vim"
not found in 'packpath': "start/*/syntax/syncolor.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim/colors/tokyonight.vim
continuing in /usr/share/nvim/runtime/syntax/synload.vim
Executing ColorScheme Autocommands for "*"
autocommand lua require("tokyonight.util").onColorScheme()

finished sourcing /usr/share/nvim/runtime/syntax/synload.vim
continuing in /usr/share/nvim/runtime/syntax/syntax.vim
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

finished sourcing /usr/share/nvim/runtime/syntax/syntax.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
not found in 'packpath': "start/*"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/gzip.vim"
finished sourcing /usr/share/nvim/runtime/plugin/gzip.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/health.vim"
finished sourcing /usr/share/nvim/runtime/plugin/health.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/man.vim"
finished sourcing /usr/share/nvim/runtime/plugin/man.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/matchit.vim"
not found in 'packpath': "pack/*/start/matchit"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/etc/xdg/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/which-key.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/vim-wakatime)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/vim-commentary)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/trouble.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/tokyonight.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/telescope.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/telescope-zoxide)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/telescope-media-files.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/telescope-fzf-native.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/project.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/popup.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/plenary.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/packer.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/package-info.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-web-devicons)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-context-commentstring)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-autotag)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-textobjects)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-refactor)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-context)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-tree.lua)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-notify)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspinstall)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspconfig)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-lsp-ts-utils)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-colorizer.lua)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-cmp)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-bufferline.lua)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/null-ls.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/mkdir.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/lualine.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/lua-dev.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/lspsaga.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/lspkind-nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/lsp_signature.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/gitsigns.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/focus.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp_luasnip)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-path)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-buffer)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/alpha-nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/Shade.nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/LuaSnip)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/usr/local/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/site)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/pack/dist/opt)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/pack/dist/opt/matchit/plugin)
chdir(/home/matt/.config/nvim)
line 3: sourcing "/usr/share/nvim/runtime/pack/dist/opt/matchit/plugin/matchit.vim"
finished sourcing /usr/share/nvim/runtime/pack/dist/opt/matchit/plugin/matchit.vim
continuing in /usr/share/nvim/runtime/plugin/matchit.vim
finished sourcing /usr/share/nvim/runtime/plugin/matchit.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/matchparen.vim"
finished sourcing /usr/share/nvim/runtime/plugin/matchparen.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/netrwPlugin.vim"
finished sourcing /usr/share/nvim/runtime/plugin/netrwPlugin.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/rplugin.vim"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim)
chdir(/home/matt/.config/nvim)
line 3: sourcing "/home/matt/.local/share/nvim/rplugin.vim"
finished sourcing /home/matt/.local/share/nvim/rplugin.vim
continuing in function <SNR>27_LoadRemotePlugins
finished sourcing /usr/share/nvim/runtime/plugin/rplugin.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/shada.vim"
finished sourcing /usr/share/nvim/runtime/plugin/shada.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/spellfile.vim"
finished sourcing /usr/share/nvim/runtime/plugin/spellfile.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/tarPlugin.vim"
finished sourcing /usr/share/nvim/runtime/plugin/tarPlugin.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/tohtml.vim"
finished sourcing /usr/share/nvim/runtime/plugin/tohtml.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/tutor.vim"
finished sourcing /usr/share/nvim/runtime/plugin/tutor.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/plugin/zipPlugin.vim"
finished sourcing /usr/share/nvim/runtime/plugin/zipPlugin.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/vim/vimfiles/plugin/fzf.vim"
finished sourcing /usr/share/vim/vimfiles/plugin/fzf.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/vim/vimfiles/plugin/notmuch.vim"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/autoload/provider)
chdir(/home/matt/.config/nvim)
line 5: sourcing "/usr/share/nvim/runtime/autoload/provider/ruby.vim"
chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/autoload/remote)
chdir(/home/matt/.config/nvim)
line 72: sourcing "/usr/share/nvim/runtime/autoload/remote/host.vim"
finished sourcing /usr/share/nvim/runtime/autoload/remote/host.vim
continuing in /usr/share/nvim/runtime/autoload/provider/ruby.vim
finished sourcing /usr/share/nvim/runtime/autoload/provider/ruby.vim
continuing in /usr/share/vim/vimfiles/plugin/notmuch.vim
finished sourcing /usr/share/vim/vimfiles/plugin/notmuch.vim
chdir(/home/matt/.config/nvim)
chdir(/usr/share/vim/vimfiles/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/vim/vimfiles/plugin/redact_pass.vim"
finished sourcing /usr/share/vim/vimfiles/plugin/redact_pass.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.config/nvim/plugin/packer_compiled.lua"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
not found in 'packpath': "pack/*/opt/packer.nvim"
finished sourcing /home/matt/.config/nvim/plugin/packer_compiled.lua
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/LuaSnip/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/LuaSnip/plugin/luasnip.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/LuaSnip/plugin/luasnip.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim/plugin/indent_blankline.vim"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim/autoload)
chdir(/home/matt/.config/nvim)
line 0: sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim/autoload/indent_blankline.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim/autoload/indent_blankline.vim
continuing in nvim_exec() called at /home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim/plugin/indent_blankline.vim:30
not found in 'runtimepath': "queries//indents.scm"
not found in 'packpath': "pack/*/start/*/queries//indents.scm"
not found in 'packpath': "start/*/queries//indents.scm"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/indent-blankline.nvim/plugin/indent_blankline.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/lspsaga.nvim/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/lspsaga.nvim/plugin/lspsaga.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/lspsaga.nvim/plugin/lspsaga.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-cmp/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-cmp/plugin/cmp.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-cmp/plugin/cmp.lua
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-colorizer.lua/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-colorizer.lua/plugin/colorizer.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-colorizer.lua/plugin/colorizer.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/plugin/lspconfig.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspconfig/plugin/lspconfig.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspinstall/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspinstall/plugin/lspinstall.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-lspinstall/plugin/lspinstall.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-tree.lua/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-tree.lua/plugin/tree.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-tree.lua/plugin/tree.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/plugin/nvim-treesitter.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/plugin/nvim-treesitter.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gdscript.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gdscript.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gomod.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/gomod.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/query.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter/ftdetect/query.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-context/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-context/plugin/treesitter-context.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-context/plugin/treesitter-context.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-refactor/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-refactor/plugin/nvim-treesitter-refactor.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-refactor/plugin/nvim-treesitter-refactor.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-textobjects/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-textobjects/plugin/nvim-treesitter-textobjects.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-treesitter-textobjects/plugin/nvim-treesitter-textobjects.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-autotag/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-autotag/plugin/nvim-ts-autotag.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-autotag/plugin/nvim-ts-autotag.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-context-commentstring/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-context-commentstring/plugin/ts_context_commentstring.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-ts-context-commentstring/plugin/ts_context_commentstring.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/nvim-web-devicons/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/nvim-web-devicons/plugin/nvim-web-devicons.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/nvim-web-devicons/plugin/nvim-web-devicons.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/plenary.nvim/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/plenary.nvim/plugin/plenary.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/plenary.nvim/plugin/plenary.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/telescope.nvim/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/telescope.nvim/plugin/telescope.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/telescope.nvim/plugin/telescope.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/trouble.nvim/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/trouble.nvim/plugin/trouble.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/trouble.nvim/plugin/trouble.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/vim-commentary/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/vim-commentary/plugin/commentary.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/vim-commentary/plugin/commentary.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/vim-wakatime/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/vim-wakatime/plugin/wakatime.vim"
Executing command: "set nonomatch; print -N >/tmp/nvimPb4Gjq/1 $WAKATIME_HOME"

finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/vim-wakatime/plugin/wakatime.vim
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/which-key.nvim/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/which-key.nvim/plugin/which-key.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/which-key.nvim/plugin/which-key.vim
not found in 'packpath': "start/*"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp_luasnip/after/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/cmp_luasnip/after/plugin/cmp_luasnip.vim"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/cmp_luasnip/after/plugin/cmp_luasnip.vim
not found in 'packpath': "pack/*/start/*/plugin/**/*.vim"
not found in 'packpath': "start/*/plugin/**/*.vim"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp_luasnip/after/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/cmp_luasnip/after/plugin/cmp_luasnip.lua"
not found in 'runtimepath': "lua/cmp_luasnip.lua"
not found in 'packpath': "pack/*/start/*/lua/cmp_luasnip.lua"
not found in 'packpath': "start/*/lua/cmp_luasnip.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/cmp_luasnip/after/plugin/cmp_luasnip.lua
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-path/after/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/cmp-path/after/plugin/cmp_path.lua"
not found in 'runtimepath': "lua/cmp_path.lua"
not found in 'packpath': "pack/*/start/*/lua/cmp_path.lua"
not found in 'packpath': "start/*/lua/cmp_path.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/cmp-path/after/plugin/cmp_path.lua
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/plugin/cmp_nvim_lua.lua"
not found in 'runtimepath': "lua/cmp_nvim_lua.lua"
not found in 'packpath': "pack/*/start/*/lua/cmp_nvim_lua.lua"
not found in 'packpath': "start/*/lua/cmp_nvim_lua.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lua/after/plugin/cmp_nvim_lua.lua
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/plugin/cmp_nvim_lsp.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/cmp-nvim-lsp/after/plugin/cmp_nvim_lsp.lua
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/plugin)
chdir(/home/matt/.config/nvim)
sourcing "/home/matt/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/plugin/cmp_buffer.lua"
not found in 'runtimepath': "lua/cmp_buffer.lua"
not found in 'packpath': "pack/*/start/*/lua/cmp_buffer.lua"
not found in 'packpath': "start/*/lua/cmp_buffer.lua"
finished sourcing /home/matt/.local/share/nvim/site/pack/packer/start/cmp-buffer/after/plugin/cmp_buffer.lua
not found in 'packpath': "pack/*/start/*/plugin/**/*.lua"
not found in 'packpath': "start/*/plugin/**/*.lua"
Reading ShaDa file "/home/matt/.local/share/nvim/shada/main.shada" info marks oldfiles
Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

not found in 'runtimepath': "ftplugin/NvimTree.vim ftplugin/NvimTree_*.vim ftplugin/NvimTree/*.vim"
not found in 'packpath': "pack/*/start/*/ftplugin/NvimTree.vim ftplugin/NvimTree_*.vim ftplugin/NvimTree/*.vim"
not found in 'packpath': "start/*/ftplugin/NvimTree.vim ftplugin/NvimTree_*.vim ftplugin/NvimTree/*.vim"
not found in 'runtimepath': "ftplugin/NvimTree.lua ftplugin/NvimTree_*.lua ftplugin/NvimTree/*.lua"
not found in 'packpath': "pack/*/start/*/ftplugin/NvimTree.lua ftplugin/NvimTree_*.lua ftplugin/NvimTree/*.lua"
not found in 'packpath': "start/*/ftplugin/NvimTree.lua ftplugin/NvimTree_*.lua ftplugin/NvimTree/*.lua"
Executing FileType Autocommands for "*"
autocommand unsilent lua require("null-ls.lspconfig").try_add()

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

not found in 'runtimepath': "indent/NvimTree.vim"
not found in 'packpath': "pack/*/start/*/indent/NvimTree.vim"
not found in 'packpath': "start/*/indent/NvimTree.vim"
not found in 'runtimepath': "indent/NvimTree.lua"
not found in 'packpath': "pack/*/start/*/indent/NvimTree.lua"
not found in 'packpath': "start/*/indent/NvimTree.lua"
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

not found in 'runtimepath': "syntax/NvimTree.vim syntax/NvimTree/*.vim"
not found in 'packpath': "pack/*/start/*/syntax/NvimTree.vim syntax/NvimTree/*.vim"
not found in 'packpath': "start/*/syntax/NvimTree.vim syntax/NvimTree/*.vim"
not found in 'runtimepath': "syntax/NvimTree.lua syntax/NvimTree/*.lua"
not found in 'packpath': "pack/*/start/*/syntax/NvimTree.lua syntax/NvimTree/*.lua"
not found in 'packpath': "start/*/syntax/NvimTree.lua syntax/NvimTree/*.lua"
Executing FileType Autocommands for "*"
autocommand IndentBlanklineRefresh

not found in 'runtimepath': "queries/NvimTree/indents.scm"
not found in 'packpath': "pack/*/start/*/queries/NvimTree/indents.scm"
not found in 'packpath': "start/*/queries/NvimTree/indents.scm"
not found in 'runtimepath': "parser/NvimTree.*"
not found in 'packpath': "pack/*/start/*/parser/NvimTree.*"
not found in 'packpath': "start/*/parser/NvimTree.*"
Executing FileType Autocommands for "*"
autocommand lua require'nvim-treesitter.configs'.reattach_module('incremental_selection')

autocommand lua require'nvim-treesitter.configs'.reattach_module('highlight')

autocommand lua require'nvim-treesitter.configs'.reattach_module('indent')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_definitions')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.navigation')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.smart_rename')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_current_scope')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.move')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.lsp_interop')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.select')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.swap')

autocommand lua require'nvim-treesitter.configs'.reattach_module('autotag')

autocommand lua require'nvim-treesitter.configs'.reattach_module('context_commentstring')

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing VimEnter Autocommands for "*"
autocommand lua require("which-key").load()

not found in 'runtimepath': "lua/which-key/plugins.lua"
not found in 'packpath': "pack/*/start/*/lua/which-key/plugins.lua"
not found in 'packpath': "start/*/lua/which-key/plugins.lua"
not found in 'runtimepath': "lua/which-key/plugins/presets.lua"
not found in 'packpath': "pack/*/start/*/lua/which-key/plugins/presets.lua"
not found in 'packpath': "start/*/lua/which-key/plugins/presets.lua"
autocommand lua require('gitsigns.manager').setup_signs_and_highlights()

Executing VimEnter Autocommands for "*"
autocommand lua require('bufferline').__load()

Executing VimEnter Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinEnter',  win_getid())

Executing VimEnter Autocommands for "*"
autocommand lua require'alpha'.start(true)

Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufDelete Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufWinEnter Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufWipeout Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

Executing OptionSet Autocommands for "list"
autocommand IndentBlanklineRefresh

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

not found in 'runtimepath': "ftplugin/alpha.vim ftplugin/alpha_*.vim ftplugin/alpha/*.vim"
not found in 'packpath': "pack/*/start/*/ftplugin/alpha.vim ftplugin/alpha_*.vim ftplugin/alpha/*.vim"
not found in 'packpath': "start/*/ftplugin/alpha.vim ftplugin/alpha_*.vim ftplugin/alpha/*.vim"
not found in 'runtimepath': "ftplugin/alpha.lua ftplugin/alpha_*.lua ftplugin/alpha/*.lua"
not found in 'packpath': "pack/*/start/*/ftplugin/alpha.lua ftplugin/alpha_*.lua ftplugin/alpha/*.lua"
not found in 'packpath': "start/*/ftplugin/alpha.lua ftplugin/alpha_*.lua ftplugin/alpha/*.lua"
Executing FileType Autocommands for "*"
autocommand unsilent lua require("null-ls.lspconfig").try_add()

Executing FileType Autocommands for "alpha"
autocommand set showtabline=0 | autocmd WinLeave <buffer> set showtabline=2

Executing FileType Autocommands for "alpha"
autocommand set noshowmode | au WinLeave <buffer> set showmode

autocommand set noruler | au WinLeave <buffer> set ruler

autocommand set laststatus=0 | au WinLeave <buffer> set laststatus=2

autocommand set noshowcmd | au WinLeave <buffer> set showcmd

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

not found in 'runtimepath': "indent/alpha.vim"
not found in 'packpath': "pack/*/start/*/indent/alpha.vim"
not found in 'packpath': "start/*/indent/alpha.vim"
not found in 'runtimepath': "indent/alpha.lua"
not found in 'packpath': "pack/*/start/*/indent/alpha.lua"
not found in 'packpath': "start/*/indent/alpha.lua"
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

not found in 'runtimepath': "syntax/alpha.vim syntax/alpha/*.vim"
not found in 'packpath': "pack/*/start/*/syntax/alpha.vim syntax/alpha/*.vim"
not found in 'packpath': "start/*/syntax/alpha.vim syntax/alpha/*.vim"
not found in 'runtimepath': "syntax/alpha.lua syntax/alpha/*.lua"
not found in 'packpath': "pack/*/start/*/syntax/alpha.lua syntax/alpha/*.lua"
not found in 'packpath': "start/*/syntax/alpha.lua syntax/alpha/*.lua"
Executing FileType Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing FileType Autocommands for "*"
autocommand lua require'nvim-treesitter.configs'.reattach_module('incremental_selection')

autocommand lua require'nvim-treesitter.configs'.reattach_module('highlight')

autocommand lua require'nvim-treesitter.configs'.reattach_module('indent')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_definitions')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.navigation')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.smart_rename')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_current_scope')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.move')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.lsp_interop')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.select')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.swap')

autocommand lua require'nvim-treesitter.configs'.reattach_module('autotag')

autocommand lua require'nvim-treesitter.configs'.reattach_module('context_commentstring')

Executing VimEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing VimEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/autoload/provider)
chdir(/home/matt/.config/nvim)
sourcing "/usr/share/nvim/runtime/autoload/provider/clipboard.vim"
finished sourcing /usr/share/nvim/runtime/autoload/provider/clipboard.vim
Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

not found in 'runtimepath': "parser/alpha.*"
not found in 'packpath': "pack/*/start/*/parser/alpha.*"
not found in 'packpath': "start/*/parser/alpha.*"
Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=5>"
autocommand call v:lua.alpha_set_cursor()

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()


--- Terminal info --- {{{
&term: xterm-kitty
Description: KovIdTTY
Aliases: xterm-kitty
Boolean capabilities:
  auto_left_margin          bw         = false
  auto_right_margin         am         = true
  no_esc_ctlc               xsb        = false
  ceol_standout_glitch      xhp        = false
  eat_newline_glitch        xenl       = true
  erase_overstrike          eo         = false
  generic_type              gn         = false
  hard_copy                 hc         = false
  has_meta_key              km         = true
  has_status_line           hs         = true
  insert_null_glitch        in         = false
  memory_above              da         = false
  memory_below              db         = false
  move_insert_mode          mir        = true
  move_standout_mode        msgr       = true
  over_strike               os         = false
  status_line_esc_ok        eslok      = false
  dest_tabs_magic_smso      xt         = false
  tilde_glitch              hz         = false
  transparent_underline     ul         = false
  xon_xoff                  xon        = false
  needs_xon_xoff            nxon       = false
  prtr_silent               mc5i       = true
  hard_cursor               chts       = false
  non_rev_rmcup             nrrmc      = false
  no_pad_char               npc        = true
  non_dest_scroll_region    ndscr      = false
  can_change                ccc        = true
  back_color_erase          bce        = false
  hue_lightness_saturation  hls        = false
  col_addr_glitch           xhpa       = false
  cr_cancels_micro_mode     crxm       = false
  has_print_wheel           daisy      = false
  row_addr_glitch           xvpa       = false
  semi_auto_right_margin    sam        = false
  cpi_changes_res           cpix       = false
  lpi_changes_res           lpix       = false
  backspaces_with_bs        OTbs       = false
  crt_no_scrolling          OTns       = false
  no_correctly_working_cr   OTnc       = false
  gnu_has_meta_key          OTMT       = false
  linefeed_is_newline       OTNL       = false
  has_hardware_tabs         OTpt       = false
  return_does_clr_eol       OTxr       = false
Numeric capabilities:
  columns                   cols       = 80
  init_tabs                 it         = 8
  lines                     lines      = 24
  lines_of_memory           lm         = -1
  magic_cookie_glitch       xmc        = -1
  padding_baud_rate         pb         = -1
  virtual_terminal          vt         = -1
  width_status_line         wsl        = -1
  num_labels                nlab       = -1
  label_height              lh         = -1
  label_width               lw         = -1
  max_attributes            ma         = -1
  maximum_windows           wnum       = -1
  max_colors                colors     = 256
  max_pairs                 pairs      = 32767
  no_color_video            ncv        = -1
  buffer_capacity           bufsz      = -1
  dot_vert_spacing          spinv      = -1
  dot_horz_spacing          spinh      = -1
  max_micro_address         maddr      = -1
  max_micro_jump            mjump      = -1
  micro_col_size            mcs        = -1
  micro_line_size           mls        = -1
  number_of_pins            npins      = -1
  output_res_char           orc        = -1
  output_res_line           orl        = -1
  output_res_horz_inch      orhi       = -1
  output_res_vert_inch      orvi       = -1
  print_rate                cps        = -1
  wide_char_size            widcs      = -1
  buttons                   btns       = -1
  bit_image_entwining       bitwin     = -1
  bit_image_type            bitype     = -1
  magic_cookie_glitch_ul    OTug       = -1
  carriage_return_delay     OTdC       = -1
  new_line_delay            OTdN       = -1
  backspace_delay           OTdB       = -1
  horizontal_tab_delay      OTdT       = -1
  number_of_function_keys   OTkn       = -1
String capabilities:
  back_tab                  cbt        = <Esc>[Z
  bell                      bel        = <C-G>
  carriage_return           cr         = <CR>
  change_scroll_region      csr        = <Esc>[%i%p1%d;%p2%dr
  clear_all_tabs            tbc        = <Esc>[3g
  clear_screen              clear      = <Esc>[H<Esc>[2J
  clr_eol                   el         = <Esc>[K
  clr_eos                   ed         = <Esc>[J
  column_address            hpa        = <Esc>[%i%p1%dG
  cursor_address            cup        = <Esc>[%i%p1%d;%p2%dH
  cursor_down               cud1       = <NL>
  cursor_home               home       = <Esc>[H
  cursor_invisible          civis      = <Esc>[?25l
  cursor_left               cub1       = <C-H>
  cursor_normal             cnorm      = <Esc>[?12h<Esc>[?25h
  cursor_right              cuf1       = <Esc>[C
  cursor_up                 cuu1       = <Esc>[A
  cursor_visible            cvvis      = <Esc>[?12;25h
  delete_character          dch1       = <Esc>[P
  delete_line               dl1        = <Esc>[M
  dis_status_line           dsl        = <Esc>]2;<C-G>
  enter_alt_charset_mode    smacs      = <Esc>(0
  enter_bold_mode           bold       = <Esc>[1m
  enter_ca_mode             smcup      = <Esc>[?1049h
  enter_dim_mode            dim        = <Esc>[2m
  enter_insert_mode         smir       = <Esc>[4h
  enter_reverse_mode        rev        = <Esc>[7m
  enter_standout_mode       smso       = <Esc>[7m
  enter_underline_mode      smul       = <Esc>[4m
  erase_chars               ech        = <Esc>[%p1%dX
  exit_alt_charset_mode     rmacs      = <Esc>(B
  exit_attribute_mode       sgr0       = <Esc>(B<Esc>[m
  exit_ca_mode              rmcup      = <Esc>[?1049l
  exit_insert_mode          rmir       = <Esc>[4l
  exit_standout_mode        rmso       = <Esc>[27m
  exit_underline_mode       rmul       = <Esc>[24m
  flash_screen              flash      = <Esc>[?5h$<100/><Esc>[?5l
  from_status_line          fsl        = <C-G>
  insert_line               il1        = <Esc>[L
  key_backspace             kbs        = <^?>
  key_dc                    kdch1      = <Esc>[3~
  key_down                  kcud1      = <Esc>OB
  key_f1                    kf1        = <Esc>OP
  key_f10                   kf10       = <Esc>[21~
  key_f2                    kf2        = <Esc>OQ
  key_f3                    kf3        = <Esc>OR
  key_f4                    kf4        = <Esc>OS
  key_f5                    kf5        = <Esc>[15~
  key_f6                    kf6        = <Esc>[17~
  key_f7                    kf7        = <Esc>[18~
  key_f8                    kf8        = <Esc>[19~
  key_f9                    kf9        = <Esc>[20~
  key_home                  khome      = <Esc>OH
  key_ic                    kich1      = <Esc>[2~
  key_left                  kcub1      = <Esc>OD
  key_npage                 knp        = <Esc>[6~
  key_ppage                 kpp        = <Esc>[5~
  key_right                 kcuf1      = <Esc>OC
  key_sf                    kind       = <Esc>[1;2B
  key_sr                    kri        = <Esc>[1;2A
  key_up                    kcuu1      = <Esc>OA
  keypad_local              rmkx       = <Esc>[?1l
  keypad_xmit               smkx       = <Esc>[?1h
  parm_dch                  dch        = <Esc>[%p1%dP
  parm_delete_line          dl         = <Esc>[%p1%dM
  parm_down_cursor          cud        = <Esc>[%p1%dB
  parm_ich                  ich        = <Esc>[%p1%d@
  parm_index                indn       = <Esc>[%p1%dS
  parm_insert_line          il         = <Esc>[%p1%dL
  parm_left_cursor          cub        = <Esc>[%p1%dD
  parm_right_cursor         cuf        = <Esc>[%p1%dC
  parm_rindex               rin        = <Esc>[%p1%dT
  parm_up_cursor            cuu        = <Esc>[%p1%dA
  repeat_char               rep        = %p1%c<Esc>[%p2%{1}%-%db
  reset_1string             rs1        = <Esc>]<Esc>\<Esc>c
  restore_cursor            rc         = <Esc>8
  row_address               vpa        = <Esc>[%i%p1%dd
  save_cursor               sc         = <Esc>7
  scroll_forward            ind        = <NL>
  scroll_reverse            ri         = <Esc>M
  set_attributes            sgr        = %?%p9%t<Esc>(0%e<Esc>(B%;<Esc>[0%?%p6%t;1%;%?%p2%t;4%;%?%p1%p3%|%t;7%;%?%p4%t;5%;%?%p7%t;8%;m
  set_tab                   hts        = <Esc>H
  tab                       ht         = <Tab>
  to_status_line            tsl        = <Esc>]2;
  key_a1                    ka1        = 
  key_a3                    ka3        = 
  key_c1                    kc1        = 
  key_c3                    kc3        = 
  acs_chars                 acsc       = ++,,--..00``aaffgghhiijjkkllmmnnooppqqrrssttuuvvwwxxyyzz{{||}}~~
  key_btab                  kcbt       = <Esc>[Z
  enter_am_mode             smam       = <Esc>[?7h
  exit_am_mode              rmam       = <Esc>[?7l
  key_end                   kend       = <Esc>OF
  key_help                  khlp       = 
  key_undo                  kund       = 
  key_sdc                   kDC        = <Esc>[3;2~
  key_send                  kEND       = <Esc>[1;2F
  key_shome                 kHOM       = <Esc>[1;2H
  key_sic                   kIC        = <Esc>[2;2~
  key_sleft                 kLFT       = <Esc>[1;2D
  key_snext                 kNXT       = <Esc>[6;2~
  key_sprevious             kPRV       = <Esc>[5;2~
  key_sright                kRIT       = <Esc>[1;2C
  key_f11                   kf11       = <Esc>[23~
  key_f12                   kf12       = <Esc>[24~
  key_f13                   kf13       = <Esc>[1;2P
  key_f14                   kf14       = <Esc>[1;2Q
  key_f15                   kf15       = <Esc>[1;2R
  key_f16                   kf16       = <Esc>[1;2S
  key_f17                   kf17       = <Esc>[15;2~
  key_f18                   kf18       = <Esc>[17;2~
  key_f19                   kf19       = <Esc>[18;2~
  key_f20                   kf20       = <Esc>[19;2~
  key_f21                   kf21       = <Esc>[20;2~
  key_f22                   kf22       = <Esc>[21;2~
  key_f23                   kf23       = <Esc>[23;2~
  key_f24                   kf24       = <Esc>[24;2~
  key_f25                   kf25       = <Esc>[1;5P
  key_f26                   kf26       = <Esc>[1;5Q
  key_f27                   kf27       = <Esc>[1;5R
  key_f28                   kf28       = <Esc>[1;5S
  key_f29                   kf29       = <Esc>[15;5~
  key_f30                   kf30       = <Esc>[17;5~
  key_f31                   kf31       = <Esc>[18;5~
  key_f32                   kf32       = <Esc>[19;5~
  key_f33                   kf33       = <Esc>[20;5~
  key_f34                   kf34       = <Esc>[21;5~
  key_f35                   kf35       = <Esc>[23;5~
  key_f36                   kf36       = <Esc>[24;5~
  key_f37                   kf37       = <Esc>[1;6P
  key_f38                   kf38       = <Esc>[1;6Q
  key_f39                   kf39       = <Esc>[1;6R
  key_f40                   kf40       = <Esc>[1;6S
  key_f41                   kf41       = <Esc>[15;6~
  key_f42                   kf42       = <Esc>[17;6~
  key_f43                   kf43       = <Esc>[18;6~
  key_f44                   kf44       = <Esc>[19;6~
  key_f45                   kf45       = <Esc>[20;6~
  key_f46                   kf46       = <Esc>[21;6~
  key_f47                   kf47       = <Esc>[23;6~
  key_f48                   kf48       = <Esc>[24;6~
  key_f49                   kf49       = <Esc>[1;3P
  key_f50                   kf50       = <Esc>[1;3Q
  key_f51                   kf51       = <Esc>[1;3R
  key_f52                   kf52       = <Esc>[1;3S
  key_f53                   kf53       = <Esc>[15;3~
  key_f54                   kf54       = <Esc>[17;3~
  key_f55                   kf55       = <Esc>[18;3~
  key_f56                   kf56       = <Esc>[19;3~
  key_f57                   kf57       = <Esc>[20;3~
  key_f58                   kf58       = <Esc>[21;3~
  key_f59                   kf59       = <Esc>[23;3~
  key_f60                   kf60       = <Esc>[24;3~
  key_f61                   kf61       = <Esc>[1;4P
  key_f62                   kf62       = <Esc>[1;4Q
  key_f63                   kf63       = <Esc>[1;4R
  clr_bol                   el1        = <Esc>[1K
  user6                     u6         = <Esc>[%i%d;%dR
  user7                     u7         = <Esc>[6n
  user8                     u8         = <Esc>[?%[;0123456789]c
  user9                     u9         = <Esc>[c
  orig_pair                 op         = <Esc>[39;49m
  orig_colors               oc         = <Esc>]104<C-G>
  initialize_color          initc      = <Esc>]4;%p1%d;rgb:%p2%{255}%*%{1000}%/%2.2X/%p3%{255}%*%{1000}%/%2.2X/%p4%{255}%*%{1000}%/%2.2X<Esc>\
  enter_italics_mode        sitm       = <Esc>[3m
  exit_italics_mode         ritm       = <Esc>[23m
  key_mouse                 kmous      = <Esc>[M
  set_a_foreground          setaf      = <Esc>[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m
  set_a_background          setab      = <Esc>[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%t10%p1%{8}%-%d%e48;5;%p1%d%;m
  set_tb_margin             smgtb      = <Esc>[%i%p1%d;%p2%dr
Extended boolean capabilities:
  Su                        = true
  Tc                        = true
  fullkbd                   = true
Extended string capabilities:
  Smulx                     = <Esc>[4:%p1%dm
  Sync                      = <Esc>P=%p1%ds<Esc>\
  kDC3                      = <Esc>[3;3~
  kDC4                      = <Esc>[3;4~
  kDC5                      = <Esc>[3;5~
  kDC6                      = <Esc>[3;6~
  kDC7                      = <Esc>[3;7~
  kDN                       = <Esc>[1;2B
  kDN3                      = <Esc>[1;3B
  kDN4                      = <Esc>[1;4B
  kDN5                      = <Esc>[1;5B
  kDN6                      = <Esc>[1;6B
  kDN7                      = <Esc>[1;7B
  kEND3                     = <Esc>[1;3F
  kEND4                     = <Esc>[1;4F
  kEND5                     = <Esc>[1;5F
  kEND6                     = <Esc>[1;6F
  kEND7                     = <Esc>[1;7F
  kHOM3                     = <Esc>[1;3H
  kHOM4                     = <Esc>[1;4H
  kHOM5                     = <Esc>[1;5H
  kHOM6                     = <Esc>[1;6H
  kHOM7                     = <Esc>[1;7H
  kIC3                      = <Esc>[2;3~
  kIC4                      = <Esc>[2;4~
  kIC5                      = <Esc>[2;5~
  kIC6                      = <Esc>[2;6~
  kIC7                      = <Esc>[2;7~
  kLFT3                     = <Esc>[1;3D
  kLFT4                     = <Esc>[1;4D
  kLFT5                     = <Esc>[1;5D
  kLFT6                     = <Esc>[1;6D
  kLFT7                     = <Esc>[1;7D
  kNXT3                     = <Esc>[6;3~
  kNXT4                     = <Esc>[6;4~
  kNXT5                     = <Esc>[6;5~
  kNXT6                     = <Esc>[6;6~
  kNXT7                     = <Esc>[6;7~
  kPRV3                     = <Esc>[5;3~
  kPRV4                     = <Esc>[5;4~
  kPRV5                     = <Esc>[5;5~
  kPRV6                     = <Esc>[5;6~
  kPRV7                     = <Esc>[5;7~
  kRIT3                     = <Esc>[1;3C
  kRIT4                     = <Esc>[1;4C
  kRIT5                     = <Esc>[1;5C
  kRIT6                     = <Esc>[1;6C
  kRIT7                     = <Esc>[1;7C
  kUP                       = <Esc>[1;2A
  kUP3                      = <Esc>[1;3A
  kUP4                      = <Esc>[1;4A
  kUP5                      = <Esc>[1;5A
  kUP6                      = <Esc>[1;6A
  kUP7                      = <Esc>[1;7A
  rmxx                      = <Esc>[29m
  setrgbb                   = <Esc>[48:2:%p1%d:%p2%d:%p3%dm
  setrgbf                   = <Esc>[38:2:%p1%d:%p2%d:%p3%dm
  smxx                      = <Esc>[9m
  ext.get_bg                = <Esc>]11;?<C-G>
  Ss                        = <Esc>[%p1%d q
  Se                        = <Esc>[ q
  ext.resize_screen         = <Esc>[8;%p1%d;%p2%dt
  ext.reset_scroll_region   = <Esc>[r
  ext.set_cursor_color      = <Esc>]12;#%p1%06x<C-G>
  ext.reset_cursor_color    = <Esc>]112<C-G>
  ext.save_title            = <Esc>[22;0t
  ext.restore_title         = <Esc>[23;0t
  ext.enable_lr_margin      = <Esc>[?69h
  ext.disable_lr_margin     = <Esc>[?69l
  ext.enable_bpaste         = <Esc>[?2004h
  ext.disable_bpaste        = <Esc>[?2004l
  ext.enable_focus          = <Esc>[?1004h
  ext.disable_focus         = <Esc>[?1004l
  ext.enable_mouse          = <Esc>[?1002h<Esc>[?1006h
  ext.disable_mouse         = <Esc>[?1002l<Esc>[?1006l
  ext.set_underline_color   = <Esc>[58:2::%p1%d:%p2%d:%p3%dm
}}}

Executing command: "'/usr/bin/zsh' '-c' 'git -C '/home/matt/.config/nvim' rev-parse --show-toplevel'"


Executing command: "'/usr/bin/zsh' '-c' 'git -C '/home/matt/.config/nvim' config --type=bool status.showUntrackedFiles'"


Executing command: "'/usr/bin/zsh' '-c' 'git -C '/home/matt/.config/nvim' status --porcelain=v1 --ignored=matching -u'"


Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/plugin)
chdir(/home/matt/.config/nvim)
line 0: sourcing "/home/matt/.config/nvim/plugin/packer_compiled.lua"
not found in 'packpath': "pack/*/opt/packer.nvim"
finished sourcing /home/matt/.config/nvim/plugin/packer_compiled.lua
continuing in nvim_exec()
remote/host: generated rplugin manifest: /home/matt/.local/share/nvim/rplugin.vim

Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufWinEnter Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

not found in 'runtimepath': "ftplugin/WhichKey.vim ftplugin/WhichKey_*.vim ftplugin/WhichKey/*.vim"
not found in 'packpath': "pack/*/start/*/ftplugin/WhichKey.vim ftplugin/WhichKey_*.vim ftplugin/WhichKey/*.vim"
not found in 'packpath': "start/*/ftplugin/WhichKey.vim ftplugin/WhichKey_*.vim ftplugin/WhichKey/*.vim"
not found in 'runtimepath': "ftplugin/WhichKey.lua ftplugin/WhichKey_*.lua ftplugin/WhichKey/*.lua"
not found in 'packpath': "pack/*/start/*/ftplugin/WhichKey.lua ftplugin/WhichKey_*.lua ftplugin/WhichKey/*.lua"
not found in 'packpath': "start/*/ftplugin/WhichKey.lua ftplugin/WhichKey_*.lua ftplugin/WhichKey/*.lua"
Executing FileType Autocommands for "*"
autocommand unsilent lua require("null-ls.lspconfig").try_add()

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

not found in 'runtimepath': "indent/WhichKey.vim"
not found in 'packpath': "pack/*/start/*/indent/WhichKey.vim"
not found in 'packpath': "start/*/indent/WhichKey.vim"
not found in 'runtimepath': "indent/WhichKey.lua"
not found in 'packpath': "pack/*/start/*/indent/WhichKey.lua"
not found in 'packpath': "start/*/indent/WhichKey.lua"
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

not found in 'runtimepath': "syntax/WhichKey.vim syntax/WhichKey/*.vim"
not found in 'packpath': "pack/*/start/*/syntax/WhichKey.vim syntax/WhichKey/*.vim"
not found in 'packpath': "start/*/syntax/WhichKey.vim syntax/WhichKey/*.vim"
not found in 'runtimepath': "syntax/WhichKey.lua syntax/WhichKey/*.lua"
not found in 'packpath': "pack/*/start/*/syntax/WhichKey.lua syntax/WhichKey/*.lua"
not found in 'packpath': "start/*/syntax/WhichKey.lua syntax/WhichKey/*.lua"
Executing FileType Autocommands for "*"
autocommand IndentBlanklineRefresh

not found in 'runtimepath': "queries/WhichKey/indents.scm"
not found in 'packpath': "pack/*/start/*/queries/WhichKey/indents.scm"
not found in 'packpath': "start/*/queries/WhichKey/indents.scm"
not found in 'runtimepath': "parser/WhichKey.*"
not found in 'packpath': "pack/*/start/*/parser/WhichKey.*"
not found in 'packpath': "start/*/parser/WhichKey.*"
Executing FileType Autocommands for "*"
autocommand lua require'nvim-treesitter.configs'.reattach_module('incremental_selection')

autocommand lua require'nvim-treesitter.configs'.reattach_module('highlight')

autocommand lua require'nvim-treesitter.configs'.reattach_module('indent')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_definitions')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.navigation')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.smart_rename')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_current_scope')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.move')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.lsp_interop')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.select')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.swap')

autocommand lua require'nvim-treesitter.configs'.reattach_module('autotag')

autocommand lua require'nvim-treesitter.configs'.reattach_module('context_commentstring')

 <leader>                                                               <bs> go up one level <esc> close 
 <leader> » +Splits                                                     <bs> go up one level <esc> close 

Executing WinClosed Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinClosed', expand('<afile>'))

Executing WinClosed Autocommands for "*"
autocommand lua require'nvim-tree'.on_leave()

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufWipeout Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end


Executing WinLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing WinLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing WinLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing WinLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing WinLeave Autocommands for "*"
autocommand silent lua require("treesitter-context").close()

Executing WinLeave Autocommands for "<buffer=5>"
autocommand set showtabline=2

autocommand set showmode

autocommand set ruler

autocommand set laststatus=2

autocommand set showcmd

Executing WinEnter Autocommands for "*"
autocommand set statusline<

Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinEnter',  win_getid())

Executing WinEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing WinEnter Autocommands for "*"
autocommand set number relativenumber

Executing WinEnter Autocommands for "*"
autocommand setlocal cursorline

Executing WinEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=5>"
autocommand call v:lua.alpha_set_cursor()

Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufWinEnter Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing WinLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing WinLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing WinLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing WinLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing WinLeave Autocommands for "*"
autocommand silent lua require("treesitter-context").close()

Executing WinEnter Autocommands for "*"
autocommand set statusline<

Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinEnter',  win_getid())

Executing WinEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing WinEnter Autocommands for "*"
autocommand set number relativenumber

Executing WinEnter Autocommands for "*"
autocommand setlocal cursorline

Executing WinEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=5>"
autocommand call v:lua.alpha_set_cursor()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=5>"
autocommand call v:lua.alpha_set_cursor()

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()


Executing QuitPre Autocommands for "*"
autocommand call s:SendHeartbeats()

Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing WinLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing WinLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing WinLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing WinLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing WinLeave Autocommands for "*"
autocommand silent lua require("treesitter-context").close()

Executing WinLeave Autocommands for "<buffer=5>"
autocommand set showtabline=2

autocommand set showmode

autocommand set ruler

autocommand set laststatus=2

autocommand set showcmd

Executing WinClosed Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinClosed', expand('<afile>'))

Executing WinClosed Autocommands for "*"
autocommand lua require'nvim-tree'.on_leave()

Executing WinClosed Autocommands for "<buffer=5>"
autocommand lua require("which-key.view").on_close()


Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufUnload Autocommands for "<buffer=5>"
autocommand call v:lua.alpha_close()

Executing BufWipeout Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

auto-removing autocommand: WinClosed <buffer=5>
auto-removing autocommand: WinLeave <buffer=5>
Executing WinEnter Autocommands for "*"
autocommand set statusline<

Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinEnter',  win_getid())

Executing WinEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing WinEnter Autocommands for "*"
autocommand set number relativenumber

Executing WinEnter Autocommands for "*"
autocommand setlocal cursorline

Executing WinEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()


Executing WinLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing WinLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing WinLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing WinLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing WinLeave Autocommands for "*"
autocommand silent lua require("treesitter-context").close()

Executing WinEnter Autocommands for "*"
autocommand set statusline<

Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinEnter',  win_getid())

Executing WinEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing WinEnter Autocommands for "*"
autocommand set number relativenumber

Executing WinEnter Autocommands for "*"
autocommand setlocal cursorline

Executing WinEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufWinEnter Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing OptionSet Autocommands for "list"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing WinScrolled Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()


Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()


Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()


Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()


Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "NvimTree"
autocommand lua require'nvim-tree'.place_cursor_on_node()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()


Executing BufLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing BufLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing BufLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing BufLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing WinLeave Autocommands for "*"
autocommand lua vim.wo.statusline=require'lualine'.statusline()

Executing WinLeave Autocommands for "*"
autocommand setlocal nonumber norelativenumber

Executing WinLeave Autocommands for "*"
autocommand setlocal nocursorline

Executing WinLeave Autocommands for "*"
autocommand setlocal signcolumn=no

Executing WinLeave Autocommands for "*"
autocommand call s:Remove_Matches()

Executing WinLeave Autocommands for "*"
autocommand silent lua require("treesitter-context").close()

Executing WinEnter Autocommands for "*"
autocommand set statusline<

Executing WinEnter Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinEnter',  win_getid())

Executing WinEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing WinEnter Autocommands for "*"
autocommand set number relativenumber

Executing WinEnter Autocommands for "*"
autocommand setlocal cursorline

Executing WinEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing WinEnter Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing WinEnter Autocommands for "*"
autocommand call s:dopopd()

Executing WinEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing BufDelete Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

Executing BufWipeout Autocommands for "*"
autocommand lua if Luasnip_current_nodes then Luasnip_current_nodes[tonumber(vim.fn.expand("<abuf>"))] = nil end

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
"~/.config/nvim/lua/plugins/focus.lua" 38L, 502C
Reading ShaDa file "/home/matt/.local/share/nvim/shada/main.shada" marks
Reading undo file: /home/matt/.local/share/nvim/undo/%home%matt%.config%nvim%lua%plugins%focus.lua
Executing BufReadPost Autocommands for "*.lua"
autocommand setf lua

Executing FileType Autocommands for "*"
autocommand call s:LoadFTPlugin()

chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/ftplugin)
chdir(/home/matt/.config/nvim)
line 17: sourcing "/usr/share/nvim/runtime/ftplugin/lua.vim"
finished sourcing /usr/share/nvim/runtime/ftplugin/lua.vim
continuing in function <SNR>14_LoadFTPlugin
not found in 'packpath': "pack/*/start/*/ftplugin/lua.vim ftplugin/lua_*.vim ftplugin/lua/*.vim"
not found in 'packpath': "start/*/ftplugin/lua.vim ftplugin/lua_*.vim ftplugin/lua/*.vim"
not found in 'runtimepath': "ftplugin/lua.lua ftplugin/lua_*.lua ftplugin/lua/*.lua"
not found in 'packpath': "pack/*/start/*/ftplugin/lua.lua ftplugin/lua_*.lua ftplugin/lua/*.lua"
not found in 'packpath': "start/*/ftplugin/lua.lua ftplugin/lua_*.lua ftplugin/lua/*.lua"
Executing FileType Autocommands for "*"
autocommand unsilent lua require("null-ls.lspconfig").try_add()

Executing FileType Autocommands for "*"
autocommand call s:LoadIndent()

chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/indent)
chdir(/home/matt/.config/nvim)
line 14: sourcing "/usr/share/nvim/runtime/indent/lua.vim"
finished sourcing /usr/share/nvim/runtime/indent/lua.vim
continuing in function <SNR>16_LoadIndent
not found in 'packpath': "pack/*/start/*/indent/lua.vim"
not found in 'packpath': "start/*/indent/lua.vim"
not found in 'runtimepath': "indent/lua.lua"
not found in 'packpath': "pack/*/start/*/indent/lua.lua"
not found in 'packpath': "start/*/indent/lua.lua"
Executing FileType Autocommands for "*"
autocommand exe "set syntax=" . expand("<amatch>")

Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

chdir(/home/matt/.config/nvim)
chdir(/usr/share/nvim/runtime/syntax)
chdir(/home/matt/.config/nvim)
line 25: sourcing "/usr/share/nvim/runtime/syntax/lua.vim"
finished sourcing /usr/share/nvim/runtime/syntax/lua.vim
continuing in function <SNR>18_SynSet
not found in 'packpath': "pack/*/start/*/syntax/lua.vim syntax/lua/*.vim"
not found in 'packpath': "start/*/syntax/lua.vim syntax/lua/*.vim"
not found in 'runtimepath': "syntax/lua.lua syntax/lua/*.lua"
not found in 'packpath': "pack/*/start/*/syntax/lua.lua syntax/lua/*.lua"
not found in 'packpath': "start/*/syntax/lua.lua syntax/lua/*.lua"
Executing FileType Autocommands for "*"
autocommand IndentBlanklineRefresh

not found in 'packpath': "start/*/queries/lua/indents.scm"
not found in 'packpath': "start/*/queries/lua/injections.scm"
Executing FileType Autocommands for "*"
autocommand lua require'nvim-treesitter.configs'.reattach_module('incremental_selection')

autocommand lua require'nvim-treesitter.configs'.reattach_module('highlight')

not found in 'packpath': "start/*/queries/lua/highlights.scm"
Executing Syntax Autocommands for "*"
autocommand call s:SynSet()

autocommand lua require'nvim-treesitter.configs'.reattach_module('indent')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_definitions')

not found in 'packpath': "start/*/queries/lua/locals.scm"
autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.navigation')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.smart_rename')

autocommand lua require'nvim-treesitter.configs'.reattach_module('refactor.highlight_current_scope')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.move')

not found in 'packpath': "start/*/queries/lua/textobjects.scm"
not found in 'packpath': "start/*/queries/lua/textobjects.scm"
autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.lsp_interop')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.select')

autocommand lua require'nvim-treesitter.configs'.reattach_module('textobjects.swap')

autocommand lua require'nvim-treesitter.configs'.reattach_module('autotag')

autocommand lua require'nvim-treesitter.configs'.reattach_module('context_commentstring')

Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat | runtime! scripts.vim | endif

Executing BufReadPost Autocommands for "*"
autocommand call <SID>neomutt_log()

Executing BufReadPost Autocommands for "*"
autocommand if !did_filetype() && expand("<amatch>") !~ g:ft_ignore_pat    && (getline(1) =~ '^#' || getline(2) =~ '^#' || getline(3) =~ '^#'^I|| getline(4) =~ '^#' || getline(5) =~ '^#') |   setf FALLBACK conf | endif

Executing BufReadPost Autocommands for "*"
autocommand if @% !~# '\.git[\/\\]COMMIT_EDITMSG$' && line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif 

Executing BufReadPost Autocommands for "*"
autocommand lua _G.package.loaded.gitsigns.attach(nil, 'BufRead')

Executing BufEnter Autocommands for "*"
autocommand set statusline<

Executing BufEnter Autocommands for "*"
autocommand :lua require"focus".resize()

Executing BufEnter Autocommands for "*"
autocommand set number relativenumber

Executing BufEnter Autocommands for "*"
autocommand setlocal cursorline

Executing BufEnter Autocommands for "*"
autocommand setlocal signcolumn=yes

Executing BufEnter Autocommands for "*"
autocommand lua require("project_nvim.project").on_buf_enter()

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.buf_enter()

Executing BufEnter Autocommands for "*"
autocommand silent lua require("treesitter-context").update_context()

Executing BufEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufEnter Autocommands for "*"
autocommand call s:InitAndHandleActivity(s:false)

Executing BufEnter Autocommands for "*"
autocommand lua require'nvim-tree'.open_on_directory()

Executing BufEnter Autocommands for "*"
autocommand lua require'lualine.components.branch'.update_branch()

Executing BufWinEnter Autocommands for "*"
autocommand set statusline<

Executing BufWinEnter Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing BufWinEnter Autocommands for "*"
autocommand lua require("trouble").action("on_win_enter")

Executing BufWinEnter Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing WinClosed Autocommands for "*"
autocommand call v:lua.require'shade'.autocmd('WinClosed', expand('<afile>'))

Executing WinClosed Autocommands for "*"
autocommand lua require'nvim-tree'.on_leave()

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

not found in 'packpath': "start/*/queries/lua/locals.scm"
not found in 'packpath': "start/*/queries/lua/highlights.scm"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
not found in 'packpath': "start/*/queries/lua/indents.scm"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'nvim-tree.diagnostics'.update()

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'trouble'.refresh({auto = true, provider = "diagnostics"})

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'nvim-tree.diagnostics'.update()

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'trouble'.refresh({auto = true, provider = "diagnostics"})

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing User Autocommands for "CursorMovedVertical"
autocommand silent lua require("treesitter-context").update_context()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(8)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(8)

Executing InsertEnter Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('InsertEnter')

Executing InsertEnter Autocommands for "*"
autocommand lua require'cmp_nvim_lsp'._on_insert_enter()

Executing InsertEnter Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing InsertEnter Autocommands for "<buffer=8>"
autocommand lua require'lsp_signature'.on_InsertEnter()
-- INSERT ---- INSERT --
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing InsertCharPre Autocommands for "<buffer=8>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=8>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(8, 1)

Executing InsertCharPre Autocommands for "<buffer=8>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

Executing InsertCharPre Autocommands for "<buffer=8>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing InsertCharPre Autocommands for "<buffer=8>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

Executing InsertCharPre Autocommands for "<buffer=8>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CompleteChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CompleteChanged Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteChanged')

Executing TextChangedP Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=8>"
autocommand lua require'lsp_signature'.on_CompleteDone()
-- INSERT ---- INSERT --
Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)-- INSERT ---- INSERT --
Executing CompleteDone Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('CompleteDone')

Executing CompleteDone Autocommands for "<buffer=8>"
autocommand lua require'lsp_signature'.on_CompleteDone()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')
-- INSERT --
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing InsertCharPre Autocommands for "<buffer=8>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=8>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(8, 1)

Executing InsertCharPre Autocommands for "<buffer=8>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=8>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(8, 1)

Executing InsertCharPre Autocommands for "<buffer=8>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=8>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(8, 1)

Executing InsertCharPre Autocommands for "<buffer=8>"
autocommand lua require'lsp_signature'.on_InsertCharPre()

Executing CursorMovedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMovedI Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing TextChangedI Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChangedI Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing TextChangedI Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('TextChanged')

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing CursorHoldI Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHoldI Autocommands for "<buffer=8>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(8, 1)


Executing InsertLeave Autocommands for "*"
autocommand lua require("luasnip").active_update_dependents()

Executing InsertLeave Autocommands for "*"
autocommand lua require'cmp.utils.autocmd'.emit('InsertLeave')

Executing InsertLeave Autocommands for "<buffer=8>"
autocommand lua require'lsp_signature'.on_InsertLeave()

Executing InsertLeave Autocommands for "<buffer=8>"
autocommand :lua vim.lsp.diagnostic._execute_scheduled_display(8, 1)

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'nvim-tree.diagnostics'.update()

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'trouble'.refresh({auto = true, provider = "diagnostics"})

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(8)


Executing BufWritePre Autocommands for "<buffer=8>"
autocommand lua vim.lsp.buf.formatting_sync(nil, 1000)

chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
"~/.config/nvim/lua/plugins/focus.lua" 
"~/.config/nvim/lua/plugins/focus.lua" 38L, 511C written
Writing undo file: /home/matt/.local/share/nvim/undo/%home%matt%.config%nvim%lua%plugins%focus.lua
Executing BufWritePost Autocommands for "*"
autocommand lua require'nvim-tree'.refresh()

Executing BufWritePost Autocommands for "*"
autocommand call s:HandleActivity(s:true)

Executing BufWritePost Autocommands for "*"
autocommand lua _G.package.loaded.gitsigns.attach(nil, 'BufWritePost')

Executing BufWritePost Autocommands for "<buffer=8>"
autocommand lua vim.lsp._text_document_did_save_handler(0)

Executing CursorMoved Autocommands for "*"
autocommand IndentBlanklineRefresh

Executing CursorMoved Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing CursorMoved Autocommands for "*"
autocommand silent lua require("treesitter-context").do_au_cursor_moved_vertical()

Executing CursorMoved Autocommands for "*"
autocommand call s:HandleActivity(s:false)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.clear_usage_highlights(8)

Executing CursorMoved Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_current_scope'.highlight_current_scope(8)

Executing TextChanged Autocommands for "*"
autocommand call s:Highlight_Matching_Pair()

Executing TextChanged Autocommands for "*"
autocommand IndentBlanklineRefresh

"~/.config/nvim/lua/plugins/focus.lua" 38L, 511C written
Executing command: "'/usr/bin/zsh' '-c' 'git -C '/home/matt/.config/nvim' config --type=bool status.showUntrackedFiles'"


Executing command: "'/usr/bin/zsh' '-c' 'git -C '/home/matt/.config/nvim' status --porcelain=v1 --ignored=matching -u'"


chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'nvim-tree.diagnostics'.update()

Executing User Autocommands for "LspDiagnosticsChanged"
autocommand lua require'trouble'.refresh({auto = true, provider = "diagnostics"})

Executing CursorHold Autocommands for "*"
autocommand lua require'lspsaga.codeaction'.code_action_prompt()

Executing CursorHold Autocommands for "<buffer=8>"
autocommand lua require'nvim-treesitter-refactor.highlight_definitions'.highlight_usages(8)


Executing QuitPre Autocommands for "*"
autocommand call s:SendHeartbeats()

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing BufWinLeave Autocommands for "*"
autocommand lua require'nvim-tree.view'._prevent_buffer_override()

Executing VimLeavePre Autocommands for "*"
autocommand lua vim.lsp._vim_exit_handler()

Executing VimLeavePre Autocommands for "*"
autocommand lua require("project_nvim.utils.history").write_projects_to_history()

Executing VimLeavePre Autocommands for "*"
autocommand lua _G.package.loaded.gitsigns.detach_all()

Writing ShaDa file "/home/matt/.local/share/nvim/shada/main.shada"
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.local/share/chezmoi)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/.git)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal/experiments/src/pages)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal/experiments/src/layouts)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal/ts-svg)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal/ts-svg)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal/ts-svg)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/Documents/projects/personal/ts-svg)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins/lsp)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/keymaps)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins/lsp)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins/lsp)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim)
chdir(/home/matt/.config/nvim/lua/plugins)
chdir(/home/matt/.config/nvim)